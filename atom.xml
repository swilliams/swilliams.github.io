<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Scott Williams]]></title>
  <link href="http://blog.swilliams.me/atom.xml" rel="self"/>
  <link href="http://blog.swilliams.me/"/>
  <updated>2015-04-02T10:58:55-07:00</updated>
  <id>http://blog.swilliams.me/</id>
  <author>
    <name><![CDATA[Scott Williams]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Retroactively Creating a Core Data Migration]]></title>
    <link href="http://blog.swilliams.me/words/2015/04/02/retroactively-creating-a-core-data-migration/"/>
    <updated>2015-04-02T10:15:15-07:00</updated>
    <id>http://blog.swilliams.me/words/2015/04/02/retroactively-creating-a-core-data-migration</id>
    <content type="html"><![CDATA[<p>Let&rsquo;s take a <em>completely hypothetical</em> situation where you&rsquo;re developing an app that uses <a href="https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/CoreData/cdProgrammingGuide.html">Core Data</a> for the local storage and have a bunch of beta testers eagerly awaiting the next version before your product launch. Your previous attitude towards the data model was something along the lines of <em>&ldquo;It&rsquo;s still pre-1.0, I&rsquo;m not bothering with migrations yet, just delete and reinstall, c&#8217;mon.&rdquo;</em> However, you forgot that requiring the beta testers to deal with that isn&rsquo;t exactly a friendly experience for them, and you made at least three changes to the data model since your last Beta release. Now if they run the app it&rsquo;ll crash immediately because the database isn&rsquo;t in sync with the data model.</p>

<p>Oops.</p>

<p>Usually when you make changes to the data model, you do so by creating a new version and telling the <code>NSPersistentStoreCoordinator</code> to perform lightweight migrations, <em>then</em> make your changes. Adding a new version of the data model after changes were made accomplishes nothing. Fortunately, you&rsquo;re not screwed. We&rsquo;re going to jump back in time, grab the old data model then pretend it was there all along.</p>

<p>Your <code>MyProject.xcdatamodeld</code> file is actually a directory. If you browse it in the Finder or Terminal, you&rsquo;ll see more folders inside it, one for each version of your model. Inside those folders is a file simply called <code>contents</code>. This is an XML representation of the editor you see in Xcode.</p>

<h3>Step 1 — Find the data model from the last beta version you released</h3>

<p>Look through the history the <code>xcdatamodel</code> file in your source control system <sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>. Hopefully you&rsquo;ve been tagging all of your releases and can just checkout that specific one.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; git checkout 1.0-beta4</span></code></pre></td></tr></table></div></figure>


<p>If not, you can mess around with <code>git log</code> to figure out where to go. This snippet can help you see the commits for a single file:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; git log --pretty=format:'%h : %s' --graph -n 45 FILENAME</span></code></pre></td></tr></table></div></figure>


<p>Then, checkout the particular commit with the right version.</p>

<h3>Step 2 — Copy the contents file</h3>

<p>Find  the <code>contents</code> file within your <code>.xcdatamodeld</code> file. Copy all that XML somewhere safe.</p>

<p>Go back to your <code>HEAD</code> or wherever you were.</p>

<h3>Step 3 — Create the new version of the data model</h3>

<p>If you didn&rsquo;t know, the process is:</p>

<ul>
<li>Open the <code>.xcdatamodeld</code> file in Xcode</li>
<li>In the Editor menu, click &ldquo;Add Model Version&rdquo;. Follow the instructions.</li>
<li>Open the File Inspector for your <code>.xcdatamodeld</code>. There is a Model Version segment in the inspector, make sure it&rsquo;s on the version you just created.</li>
</ul>


<p>Now you have two data models that are identical. Let&rsquo;s change the history on the original one.</p>

<h3>Step 4 — Change history</h3>

<p>Close Xcode. That&rsquo;s not mandatory but I&rsquo;ve had it crash when mucking about with these files, and it&rsquo;s just not worth the hassle.</p>

<p>Open the <code>contents</code> file for the <strong>original</strong> <code>.xcdatamodeld</code> in a text editor.</p>

<p>Paste in the version you created in Step 2.</p>

<p>Open Xcode. If you haven&rsquo;t set up the <code>NSPersistentStoreCoordinator</code> to run migrations, do so now. <a href="http://www.raywenderlich.com/27657/how-to-perform-a-lightweight-core-data-migration">This tutorial is pretty good</a>.</p>

<p>Now when the app runs, the migrations update the users&#8217; data and keep things from crashing.</p>

<p>Note: This is for <em>lightweight</em> migrations. Custom migrations are more complicated. <a href="http://www.objc.io/issue-4/core-data-migration.html">objc.io</a> has a great article on these. I don&rsquo;t know if you can play fast and loose with the data model file like you can here though.</p>

<div class="footnotes">
  <ol>
    <li class="footnote" id="fn:1">
  <p>You ARE using Source Control, right? Sometimes new developers will ask me why they need Source Control. I usually parrot the usual answers - branching is good, undo mistakes, tool integration, etc - but situations like this are where it really shines. Without source control here, you&#8217;d be hosed. You&#8217;d have to manually fix the XML in the contents file, which would be monumentally hard or altogether impossible depending on what changed and how good your memory is.</p>
</li>
  </ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Two Factor Authentication for GitHub]]></title>
    <link href="http://blog.swilliams.me/words/2015/04/01/two-factor-authentication-for-github/"/>
    <updated>2015-04-01T10:48:48-07:00</updated>
    <id>http://blog.swilliams.me/words/2015/04/01/two-factor-authentication-for-github</id>
    <content type="html"><![CDATA[<p>In the interest of security I&rsquo;ve started to turn on <a href="http://en.wikipedia.org/wiki/Multi-factor_authentication">Two Factor Authentication</a> (aka 2FA) for some of the services I use. I tried it out with GitHub about a year ago, but turned it off shortly thereafter because I encountered a bunch of problems and didn&rsquo;t have the time to figure them all out. That and <a href="https://support.google.com/accounts/answer/3376859?hl=en">Google&rsquo;s Authenticator app having data loss issues after an update</a> was a big red flag too.</p>

<p>Today it&rsquo;s a little easier to manage. <a href="https://itunes.apple.com/us/app/1password-password-manager/id443987910?mt=12&amp;at=11lxUn">1Password</a> has 2FA support built in now, and there&rsquo;s also <a href="https://itunes.apple.com/us/app/duo-mobile/id422663827?mt=8&amp;at=11lxUn">Duo Mobile&rsquo;s app</a>. Turning it on was pretty easy: Go to the <a href="https://github.com/settings/security">security</a> page, click a few buttons, and follow instructions. Once it was enabled I decided to push some changes for a project, and then this happened:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; git push origin master
</span><span class='line'>remote: Invalid username or password.
</span><span class='line'>fatal: Authentication failed for 'https://github.com/swilliams/my-repo.git/'</span></code></pre></td></tr></table></div></figure>


<p>Umm, ok. I mean, I guess the most secure repository is one that <strong>nobody</strong> can access.</p>

<p>The solution isn&rsquo;t immediately obvious. I looked at <a href="https://help.github.com/articles/caching-your-github-password-in-git/">GitHub&rsquo;s setup docs</a> again, but they didn&rsquo;t mention anything about 2FA. When in doubt, try it again right? This time I got a username/password prompt. I had assumed I would get some sort of additional prompt to enter a single use code for the 2FA, so I pasted in my GitHub password.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; git push origin master
</span><span class='line'>Username for 'https://github.com': swilliams
</span><span class='line'>Password for 'https://swilliams@github.com':
</span><span class='line'>remote: Invalid username or password.
</span><span class='line'>fatal: Authentication failed for 'https://github.com/swilliams/my-repo.git/'</span></code></pre></td></tr></table></div></figure>


<p>No dice.</p>

<p>Googling around a bit finally brought me to <a href="https://help.github.com/articles/creating-an-access-token-for-command-line-use/">this page, &ldquo;Creating an access token for command-line use&rdquo;</a>. When you enable 2FA you need to use a token as your password for the Terminal. I created this with the default scopes provided<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>, then copy/pasted the resulting token into the password prompt in my Terminal window.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>± git push origin master
</span><span class='line'>Username for 'https://github.com': swilliams
</span><span class='line'>Password for 'https://swilliams@github.com':
</span><span class='line'>Counting objects: 80, done.
</span><span class='line'>Delta compression using up to 4 threads.
</span><span class='line'>Compressing objects: 100% (78/78), done.
</span><span class='line'>Writing objects: 100% (80/80), 9.02 KiB | 0 bytes/s, done.
</span><span class='line'>Total 80 (delta 58), reused 0 (delta 0)
</span><span class='line'>To https://github.com/swilliams/my-repo.git
</span><span class='line'>   01efb2c..445a0b6  master -&gt; master</span></code></pre></td></tr></table></div></figure>


<p>Yay!</p>

<p>I <em>think</em> that should handle all the headaches for 2FA with GitHub. I like the warm security feeling it brings, and it seems like the user experience has been cleared up too.</p>

<div class="footnotes">
  <ol>
    <li class="footnote" id="fn:1">
  <p>For standard git operations, I don&#8217;t think you would need any of the other scopes available for apps, and you could probably remove <pre>gist</pre> from it too.</p>
</li>
  </ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tracking Down an EXC_BAD_ACCESS in Swift]]></title>
    <link href="http://blog.swilliams.me/words/2015/03/31/tracking-down-an-exc-bad-access-with-swift/"/>
    <updated>2015-03-31T11:05:51-07:00</updated>
    <id>http://blog.swilliams.me/words/2015/03/31/tracking-down-an-exc-bad-access-with-swift</id>
    <content type="html"><![CDATA[<p>Managing memory has become easier. Things like <a href="https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/AutomaticReferenceCounting.html">ARC</a> take away much of  what was once a painful and bug-ridden task. Things are not always panacea of course; it is still far too possible to do the wrong thing and access memory you are not supposed to and receive the dreaded <code>EXC_BAD_ACCESS</code> error.</p>

<p>Today I was working on a project in Swift. And despite my <a href="">appreciation</a> of the language, the tooling still remains&hellip; <em>suspect</em>. I have covered that topic a <a href="http://blog.swilliams.me/words/2015/01/21/the-madness-of-errors-in-swift/">couple</a> of <a href="http://blog.swilliams.me/words/2014/10/30/dealing-with-xcode-and-swift/">times</a> before.</p>

<p>Sometimes it&rsquo;s obvious where the problem is based on the call-stack. This time it was not so obvious. The problem occurred at the end of a series of steps in a wizard when all the prior screens were finally being released from memory. From what I could tell the error was when one of the view controllers that represented one of the steps in the wizard was being deinitialized, but otherwise I couldn&rsquo;t immediately see where the problem was.</p>

<p>In Objective C you can turn on what&rsquo;s called <a href="https://developer.apple.com/library/ios/documentation/DeveloperTools/Conceptual/InstrumentsUserGuide/MemoryManagementforYourApp/MemoryManagementforYourApp.html">&ldquo;NS Zombies&rdquo; mode</a>, which keeps objects allocated (as a special &ldquo;Zombie&rdquo; object) and then raises warnings you try to access one of those Zombie objects. In my experience this has not worked quite was well with Swift. With Zombies mode enabled the app ran fine without crashing, but also didn&rsquo;t raise any warnings about accessing bad memory. It was a <a href="http://en.wikipedia.org/wiki/Heisenbug">Heisenbug</a>!</p>

<figure class="center">
    <img alt="Heisenberg" src="http://blog.swilliams.me/images/assets/heisenberg.jpg">
    <figcaption>Eh, close enough</figcaption>
</figure>


<p>Next I started to play around with the code thinking that I was improperly handling the lifecycle of some of the properties of several classes. I changed around some lazy properties and made certain other things optional, but this was just wheel spinning.</p>

<p>I backed up and reviewed the callstack again. The last frame before explosion was now at <code>swift_unknownWeakRelease</code> in a helper class referenced by the offending ViewController. This helper had this property:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// SearchBarHelper.swift
</span><span class='line'>private unowned let searchBar: UISearchBar</span></code></pre></td></tr></table></div></figure>


<p>I then re-checked the <a href="https://developer.apple.com/library/prerelease/mac/documentation/Swift/Conceptual/Swift_Programming_Language/AutomaticReferenceCounting.html">documentation for <code>unowned</code></a>.</p>

<blockquote><p>If you try to access an unowned reference after the instance that it references is deallocated, you will trigger a runtime error. Use unowned references only when you are sure that the reference will always refer to an instance.</p>

<p>Note also that Swift guarantees your app will crash if you try to access an unowned reference after the instance it references is deallocated. You will never encounter unexpected behavior in this situation. Your app will always crash reliably, although you should, of course, prevent it from doing so.</p></blockquote>

<p>That <code>searchBar</code> was originally defined as an <code>IBOutlet</code> on the ViewController:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// ViewController.swift
</span><span class='line'>@IBOutlet weak var searchBar: UISearchBar!</span></code></pre></td></tr></table></div></figure>


<p>The lights turned on. <em>Of course</em> it was crashing. An outlet that&rsquo;s a weak property can and will be deallocated when the controller referencing it is no longer visible. I forgot about that when I created the other class to manage certain characteristics about that search bar. So, the <code>searchBar</code> was released at some point, and when the helper was next called (in deallocation) part of its representation in memory was an <code>unowned</code> property that was nil, a state it cannot be in. Thus, <code>EXC_BAD_ACCESS</code>.</p>

<p>The solution was simple, I still didn&rsquo;t want <code>SearchBarHelper</code> to have ownership of the <code>searchBar</code>, so I changed it to a weak optional.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// SearchBarHelper.swift
</span><span class='line'>private weak var searchBar: UISearchBar?</span></code></pre></td></tr></table></div></figure>


<p>Success!</p>

<p>Takeaway lesson: read and understand the documentation. Memory and how it is handled is still something that absolutely must be understood if you want to manage it well.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Woe of Newspapers]]></title>
    <link href="http://blog.swilliams.me/words/2015/03/22/the-woe-of-newspapers/"/>
    <updated>2015-03-22T13:59:53-07:00</updated>
    <id>http://blog.swilliams.me/words/2015/03/22/the-woe-of-newspapers</id>
    <content type="html"><![CDATA[<p>The other day a couple of salespeople for the Arizona Republic came knocking on my door. Here was their pitch:</p>

<p>&ldquo;We&rsquo;re going to start delivering you a paper every Wednesday and Sunday. Would you like it in your driveway or on the roof?&rdquo; and then a pause for laughter. I was more confused; her delivery was pretty bad, and there was a distinct waft of desperation.</p>

<p>I started to explain that I didn&rsquo;t want a newspaper even if it was free.</p>

<p>&ldquo;But it&rsquo;s only $.95 per week! You&rsquo;ll make that up with all the coupons you&rsquo;ll be getting!&rdquo; She was pushing the coupons pretty hard. I guess this is why people get newspapers, in order to buy cereal for $.20 off?</p>

<p>I said I didn&rsquo;t really care about coupons and politely told them to have a good afternoon. After extricating myself from the conversation I realized something: not once during their pitch did they mention the actual <em>content</em> of the paper. That&rsquo;s got to be depressing if you&rsquo;re a journalist — according to your sales staff your work is nothing more than a coupon delivery system with some words in between.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Scott's Guide to Twitter Happiness]]></title>
    <link href="http://blog.swilliams.me/words/2015/02/27/scotts-guide-to-twitter-happiness/"/>
    <updated>2015-02-27T07:36:32-07:00</updated>
    <id>http://blog.swilliams.me/words/2015/02/27/scotts-guide-to-twitter-happiness</id>
    <content type="html"><![CDATA[<ol>
<li>You don&rsquo;t <em>have</em> to be on Twitter every 2 minutes. If there&rsquo;s a meme you don&rsquo;t like, a perfectly valid option is to put your phone away.</li>
<li>Silliness is good. Everything doesn&rsquo;t have to be all doom and gloom serious all the time.</li>
<li>Change takes time, and is often the result of a succession of small steps with a few medium ones here and there. Be happy when the small steps happen.</li>
<li>Find some joy.</li>
</ol>


<p>Is that a little reductive? Sure. But if you find yourself feeling angrier and angrier over what happens on Twitter, it might be time to reconsider how you&rsquo;re using it.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Front to Back #8 — My First Diablo]]></title>
    <link href="http://blog.swilliams.me/words/2015/02/25/front-to-back-number-8-my-first-diablo/"/>
    <updated>2015-02-25T08:54:52-07:00</updated>
    <id>http://blog.swilliams.me/words/2015/02/25/front-to-back-number-8-my-first-diablo</id>
    <content type="html"><![CDATA[<p><a href="http://fronttoback.co/podcast/8">My First Diablo</a> is the newest episode of my <a href="http://fronttoback.co">podcast</a>. It&rsquo;s also the first episode where we have a guest: <a href="http://twitter.com/wickedgood">Steve Lubitz</a> of <a href="http://5by5.tv/isometric">Isometric</a> fame. We talk video games and how that works when you have a bunch of kids in the house. I&rsquo;d wanted to discuss this topic because my kids are now old enough to play console games without getting too frustrated over the experience, and I&rsquo;d been out of the loop for quite some time.</p>

<p>Steve had some solid recommendations and now my wife and I are discussing when would be a good time to re-introduce consoles into the house. That might happen this summer when the kids are done with school, and there will be more time available to figure out limits and such. I&rsquo;m thinking a Wii U would be the right way to go since there&rsquo;s a better selection of kid-friendly games there. What I&rsquo;m not looking forward to is all the controllers/accessories that Nintendo seems to think are required for their games. Most <a href="http://www.amazon.com/Nintendo-Wii-Deluxe-Set-Bundle-3ds/dp/B00MVUKM0A/ref=sr_1_1?sr=8-1&amp;ie=UTF8&amp;keywords=wii%2Bu&amp;tag=thepetzoo-20&amp;qid=1424881179">bundles for the Wii U</a> come with the controller with a screen on it. I can&rsquo;t tell if you can buy more of those or not<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>. But you can get <a href="http://www.amazon.com/Nintendo-Wii-Remote-Plus-Black/dp/B00N4OAELY/ref=sr_1_1?ie=UTF8&amp;sr=1-1&amp;s=videogames&amp;keywords=wii%2Bmote&amp;tag=thepetzoo-20&amp;qid=1424881298">Wii-motes</a>, <a href="http://www.amazon.com/Nintendo-Nunchuk-Controller-Black-Wii/dp/B0094X1ZXU/ref=pd_bxgy_vg_img_y?tag=thepetzoo-20">nunchucks</a>, <a href="http://www.amazon.com/Nintendo-Pro-Controller-Black-Wii-u/dp/B00MUY0OFU/ref=pd_sim_vg_3?refRID=0SQ5Z19AHMG8VE30V0TD&amp;tag=thepetzoo-20&amp;ie=UTF8">pro controllers</a>, and various third party gizmos. I&rsquo;m not exactly looking forward to sifting through exactly what kind of those we&rsquo;ll need, nor storing them. I&rsquo;m not even going to touch handheld systems.<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup></p>

<p>Video games were a big part of my childhood (some might say obsessive&hellip; I had a subscription to Nintendo Power without owning a Nintendo system). My hope is that rather than just consuming all the video game minutiae like I did, my kids will just have fun playing them with their family and friends.</p>

<div class="footnotes">
  <ol>
    <li class="footnote" id="fn:1">
  <p>Amazon and other retailers seem to be sold out of official ones.</p>
</li>
<li class="footnote" id="fn:2">
  <p>Scientifically speaking, there are 327 different versions of the Nintendo DS to choose from.</p>
</li>
  </ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Law Doesn't Defend Us; We Defend the Law]]></title>
    <link href="http://blog.swilliams.me/words/2015/02/24/the-law-doesnt-defend-us-we-defend-the-law/"/>
    <updated>2015-02-24T08:51:07-07:00</updated>
    <id>http://blog.swilliams.me/words/2015/02/24/the-law-doesnt-defend-us-we-defend-the-law</id>
    <content type="html"><![CDATA[<p>Recently, <a href="https://firstlook.org/theintercept/greenwald/">Glenn Greenwald</a>, <a href="http://en.wikipedia.org/wiki/Laura_Poitras">Laura Poitras</a>, and <a href="http://en.wikipedia.org/wiki/Edward_Snowden">Edward Snowden</a> took part in an <a href="http://www.reddit.com/r/iama">&lsquo;IAMA&rsquo;</a> <a href="http://www.reddit.com/r/IAmA/comments/2wwdep/we_are_edward_snowden_laura_poitras_and_glenn">converstation on Reddit</a>. It&rsquo;s a long one, and somewhere down the page, <a href="http://www.reddit.com/r/IAmA/comments/2wwdep/we_are_edward_snowden_laura_poitras_and_glenn/coup7ld">this question was asked</a>:</p>

<blockquote><p>What&rsquo;s the best way to make NSA spying an issue in the 2016 Presidential Election? It seems like while it was a big deal in 2013, ISIS and other events have put it on the back burner for now in the media and general public. What are your ideas for how to bring it back to the forefront?</p></blockquote>

<p>Funny how this seems to happen. Snowden gave a tremendous answer. There&rsquo;s too many great quotes to pull from his response, so I&rsquo;ll just copy/paste the <a href="http://www.reddit.com/r/IAmA/comments/2wwdep/we_are_edward_snowden_laura_poitras_and_glenn/courx1i">whole thing</a>.</p>

<blockquote><p>This is a good question, and there are some good traditional answers here. Organizing is important. Activism is important.</p>

<p>At the same time, we should remember that governments don&rsquo;t often reform themselves. One of the arguments in a book I read recently (Bruce Schneier, &ldquo;Data and Goliath&rdquo;), is that perfect enforcement of the law sounds like a good thing, but that may not always be the case. The end of crime sounds pretty compelling, right, so how can that be?</p>

<p>Well, when we look back on history, the progress of Western civilization and human rights is actually founded on the violation of law. America was of course born out of a violent revolution that was an outrageous treason against the crown and established order of the day. History shows that the righting of historical wrongs is often born from acts of unrepentant criminality. Slavery. The protection of persecuted Jews.</p>

<p>But even on less extremist topics, we can find similar examples. How about the prohibition of alcohol? Gay marriage? Marijuana?</p>

<p>Where would we be today if the government, enjoying powers of perfect surveillance and enforcement, had &mdash; entirely within the law &mdash; rounded up, imprisoned, and shamed all of these lawbreakers?</p>

<p>Ultimately, if people lose their willingness to recognize that there are times in our history when legality becomes distinct from morality, we aren&rsquo;t just ceding control of our rights to government, but our agency in determing thour futures.</p>

<p>How does this relate to politics? Well, I suspect that governments today are more concerned with the loss of their ability to control and regulate the behavior of their citizens than they are with their citizens&#8217; discontent.</p>

<p>How do we make that work for us? We can devise means, through the application and sophistication of science, to remind governments that if they will not be responsible stewards of our rights, we the people will implement systems that provide for a means of not just enforcing our rights, but removing from governments the ability to interfere with those rights.</p>

<p>You can see the beginnings of this dynamic today in the statements of government officials complaining about the adoption of encryption by major technology providers. The idea here isn&rsquo;t to fling ourselves into anarchy and do away with government, but to remind the government that there must always be a balance of power between the governing and the governed, and that as the progress of science increasingly empowers communities and individuals, there will be more and more areas of our lives where &mdash; if government insists on behaving poorly and with a callous disregard for the citizen &mdash; we can find ways to reduce or remove their powers on a new &mdash; and permanent &mdash; basis.</p>

<p>Our rights are not granted by governments. They are inherent to our nature. But it&rsquo;s entirely the opposite for governments: their privileges are precisely equal to only those which we suffer them to enjoy.</p>

<p>We haven&rsquo;t had to think about that much in the last few decades because quality of life has been increasing across almost all measures in a significant way, and that has led to a comfortable complacency. But here and there throughout history, we&rsquo;ll occasionally come across these periods where governments think more about what they &ldquo;can&rdquo; do rather than what they &ldquo;should&rdquo; do, and what is lawful will become increasingly distinct from what is moral.</p>

<p>In such times, we&rsquo;d do well to remember that at the end of the day, the law doesn&rsquo;t defend us; we defend the law. And when it becomes contrary to our morals, we have both the right and the responsibility to rebalance it toward just ends.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Podcast Technology]]></title>
    <link href="http://blog.swilliams.me/words/2015/02/18/podcast-technology/"/>
    <updated>2015-02-18T08:32:31-07:00</updated>
    <id>http://blog.swilliams.me/words/2015/02/18/podcast-technology</id>
    <content type="html"><![CDATA[<p>You should listen to <a href="http://www.relay.fm/">Relay.fm&rsquo;s</a> new series on Inquisitive, <a href="http://www.relay.fm/inquisitive/27">&ldquo;Behind the App&rdquo;</a>. Myke opens the show with how the iPhone (and smartphones in general) helped bring podcasts to a larger audience. He&rsquo;s absolutely right.</p>

<p>Before smartphones, you had to sync everything to an iPod with your computer before you could listen to it. For me, this usually happened at home, and if I forgot to plug in my iPod and sync it, I&rsquo;d go without new episodes for the day; a fate worse than death. Syncing an iPod at the office was usually out of the question. IT policy at the time disallowed connecting personal hardware to company PCs <sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup> and blacklisted many of the sites hosting the audio files anyway.</p>

<p>I could live with the first issue, but I would go to great lengths to work around the latter one. Even though the experience wasn&rsquo;t as nice, downloading and listening to a podcast on my work PC was still something. Here&rsquo;s how:</p>

<ul>
<li>SSH into my Linux based web server</li>
<li><a href="http://www.gnu.org/software/wget/manual/wget.html#Overview"><code>wget</code></a> the RSS feed</li>
<li>Find the link to the newest mp3 file</li>
<li><code>wget</code> the mp3</li>
<li>Copy it into a folder publicly accessible on my server (this wasn&rsquo;t blocked by IT)</li>
<li>Download it locally with my web browser (this was Windows and installing something like wget was also strictly verboten from IT)</li>
<li>Listen</li>
</ul>


<p>Easy peesy lemon squeezey, right?<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup> Now, if I want to listen to a podcast, I open up <a href="https://overcast.fm/">Overcast</a> and see if there&rsquo;s anything new. The only thing I have to think about now if I want to download over my cellular connection or not.</p>

<p>The future is good.</p>

<div class="footnotes">
  <ol>
    <li class="footnote" id="fn:1">
  <p>For <em>very</em> good reason. God only knows what kind of malware you brought along with your external drive&#8230;</p>
</li>
<li class="footnote" id="fn:2">
  <p>&#8220;OK&#8230; First I&#8217;ll access the secret military spy satellite that&#8217;s in a geosynchronous orbit over the Midwest. Then, I&#8217;ll ID the limo by the vanity plate &#8216;MR. BIGGG&#8217; and get his approximate position. Then, I&#8217;ll reposition the transmitter dish on the remote truck to 17.32 degrees east, hit WESTAR 4 over the Atlantic, bounce the signal down into the Azores, up to COMSAT 6, beam it back to SATCOM 2 transmitter number 137, and down on the dish on the back of Mr. Big&#8217;s limo&#8230; It&#8217;s almost too easy.&#8221; — <a href="http://www.imdb.com/title/tt0105793/">Garth Algar</a></p>
</li>
  </ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sympathy for the Carroll]]></title>
    <link href="http://blog.swilliams.me/words/2015/02/02/sympathy-for-the-carroll/"/>
    <updated>2015-02-02T19:04:14-07:00</updated>
    <id>http://blog.swilliams.me/words/2015/02/02/sympathy-for-the-carroll</id>
    <content type="html"><![CDATA[<p>When listening to a podcast, the host will often forget a word or well known fact. Maybe they&rsquo;ll say something silly like <a href="http://on.cc.com/1rU1N7O">&ldquo;Jedi mind meld&rdquo;</a>. Everyone in the audience knows exactly what they meant, and everyone will likely make that fact known (I&rsquo;ve sure been there, and will likely continue to be).</p>

<iframe width="420" height="315" src="https://www.youtube.com/embed/wNq8-4DtvaM" frameborder="0" allowfullscreen></iframe>


<p>Now that I&rsquo;ve released a few episodes of <a href="http://www.fronttoback.co/">my own podcast</a> I&rsquo;ve seen the other side of the microphone. Talking and thinking at the same time is surprisingly difficult after say, 8 words in. I&rsquo;ll find myself stumbling over witty quips and forgetting familiar things that had been otherwise seared into my memory.</p>

<p>So, I have a teensy bit more empathy for Pete Carroll the day after <a href="http://grantland.com/the-triangle/super-bowl-new-england-patriots-seattle-seahawks/">an impressive Super Bowl Loss</a>. Yeah, he probably should&rsquo;ve run Marshawn Lynch on that one play, but I don&rsquo;t know if I would&rsquo;ve had the brain power to make a different decision with under 30 seconds left, in the 4th quarter, of the Super Bowl.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Podcast Appearances]]></title>
    <link href="http://blog.swilliams.me/words/2015/01/28/podcast-appearances/"/>
    <updated>2015-01-28T14:36:00-07:00</updated>
    <id>http://blog.swilliams.me/words/2015/01/28/podcast-appearances</id>
    <content type="html"><![CDATA[<p>Podcasts are Important Business. Here&rsquo;s an update.</p>

<h3>Better Know a Jackal</h3>

<p>The [rabid] fans of the 5by5 podcast network are informally known as &ldquo;Jackals&rdquo;. One of said Jackals, <a href="http://twitter.com/mikebeasterfeld">Mike Beasterfeld</a> had the brilliant idea to create a <a href="http://www.jackals.us/better-know-a-jackal">podcast to interview us</a>. I made it onto <a href="http://www.jackals.us/better-know-a-jackal/28">episode 28</a>. It&rsquo;s a nice little bio that you can use to gather information to steal my identity.</p>

<h3>Less Than Or Equal</h3>

<p>I was a guest on episode 25 of <a href="http://twitter.com/aleen">Aleen Simms&rsquo;s</a> <a href="http://www.lessthanorequal.com/episodes/25">Less Than Or Equal</a> podcast. I had a great time talking with her and we chatted about maturity, growing up, and how having daughters changed me; specifically some specific incidents in my personal history that formed me into what I am today. Speaking of daughters&hellip;</p>

<h3>Front to Back</h3>

<p>We just released our <a href="http://www.fronttoback.co/podcast/2015/1/27/6-practice-kid">6th(!) episode</a>. I&rsquo;ve really enjoyed making this show and have learned more and more about audio editing. This time around I used some <a href="http://en.wikipedia.org/wiki/Dynamic_range_compression">compression</a> to make our voices sound better.</p>

<p>Please check them out!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Surface Marketing]]></title>
    <link href="http://blog.swilliams.me/words/2015/01/27/surface-marketing/"/>
    <updated>2015-01-27T19:26:01-07:00</updated>
    <id>http://blog.swilliams.me/words/2015/01/27/surface-marketing</id>
    <content type="html"><![CDATA[<p>The <a href="http://www.microsoft.com/surface/en-us">Surface</a> was never the barnburner that Microsoft hoped it would be. People have been <a href="http://www.deccanchronicle.com/140629/technology-mobiles-and-tabs/article/microsoft-discontinue-surface-tablet">predicting</a> <a href="http://arstechnica.com/gadgets/2014/08/surface-2-prices-slashed-hinting-at-discontinuation-or-replacement/">its demise</a> for the <a href="http://bgr.com/2014/10/09/microsoft-surface-pro-3/">last year</a>. It&rsquo;s suffered from <a href="https://www.youtube.com/watch?v=iqyTxiTKxgI">goofy advertising</a> and lately seems to be begging the masses to please think of it instead of an iPad, <a href="https://www.youtube.com/watch?v=1jP4O7rEHQ8">anything but an iPad, oh please</a>! <sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup></p>

<p>I&rsquo;m certainly no Don Draper, but that&rsquo;s not gonna prevent my <del>ego</del> imagination to think of how I&rsquo;d do it instead. The idea is that the Surface apparently has a nice stylus/pen that can be used by artists. Penny Arcarde&rsquo;s <a href="http://www.penny-arcade.com/news/post/2013/10/28/surface-pro-2">Mike Krahulik has been a fan</a> and used them to draw their popular web comic. That&rsquo;s your angle right there. Now, not many people are artists that would benefit from a refined drawing interface, but plenty of people <em>fancy</em> themselves as such. Nike convinced you that sneakers with compressed air in them would make you Michael Jordan, why isn&rsquo;t Microsoft showing you that Surface would make you <a href="http://en.wikipedia.org/wiki/Jim_Lee">Jim Lee</a>?</p>

<p>Here&rsquo;s your commercial: Camera fades in to reveal someone intently working on a Surface. They&rsquo;re sitting in a comfy chair, or on a couch, or some kind of hipster furniture. We don&rsquo;t see what&rsquo;s on the screen yet but we can see them concentrating and cranking away at <em>something</em> with the pen. Cut to the over-the-shoulder shot. We now see a painting/sketch/comic coming to life.</p>

<p>Cut to closeups of the pen drawing right on the glass. There&rsquo;s no lag. The pen is able to draw with a fine point. There&rsquo;s obvious pressure sensitivity. (Things you pretty much can&rsquo;t do on an iPad, but without calling it by name.) They put the pen down and &ldquo;smudge&rdquo; things with their finger.</p>

<p>Finally the art is done. The artist switches to their website and immediately publishes the work.</p>

<p>Cut to a desk with the notorious Surface keyboard and a wireless mouse right next to it. The Surface clicks in to the keyboard, sits up on the kickstand and a modern 3D PC game (say, Far Cry 4) starts up (oh yeah, it&rsquo;s got an i5 and a GPU). Display the tagline: &ldquo;Make. Publish. Play.&rdquo;</p>

<p>Wouldn&rsquo;t that be more interesting than breakdancing? Wouldn&rsquo;t that get you pumped up just a little bit? These days I&rsquo;m a Microsoft cynic, and that would at least get me to raise an eyebrow and <em>wish</em> my iPad could do something like that.</p>

<p>If Apple is in fact <a href="http://9to5mac.com/2015/01/18/kgi-apple-likely-to-sell-stylus-accessory-alongside-12-inch-ipad-pro/">working on a stylus</a> that avenue will probably close.</p>

<div class="footnotes">
  <ol>
    <li class="footnote" id="fn:1">
  <p>The funny thing is that out of all Apple&#8217;s products, the iPad is the one that has plateaued the most. Why are you aiming at that one?</p>
</li>
  </ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Madness of Errors in Swift]]></title>
    <link href="http://blog.swilliams.me/words/2015/01/21/the-madness-of-errors-in-swift/"/>
    <updated>2015-01-21T20:18:43-07:00</updated>
    <id>http://blog.swilliams.me/words/2015/01/21/the-madness-of-errors-in-swift</id>
    <content type="html"><![CDATA[<p>Let&rsquo;s take a common scenario. You are making an HTTP request and are checking the response for an error. If there is one, you&rsquo;d like to post a notification and let some error handler deal with it.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>    Alamofire.request(.GET, someURL).response { (request, response, data, error) in
</span><span class='line'>        if error != nil {
</span><span class='line'>            let userInfo = ["error": error]
</span><span class='line'>            let nc = NSNotificationCenter.defaultCenter()
</span><span class='line'>            nc.postNotificationName("HTTPERROR", object: nil, userInfo: userInfo)
</span><span class='line'>        }
</span><span class='line'>    }</span></code></pre></td></tr></table></div></figure>


<p>Uh oh, there&rsquo;s a compiler error on the <code>userInfo</code> argument with the message &ldquo;Extra argument &lsquo;userInfo&rsquo; in call&rdquo;. Huh? <a href="https://developer.apple.com/library/ios/documentation/Cocoa/Reference/Foundation/Classes/NSNotificationCenter_Class/index.html#//apple_ref/occ/instm/NSNotificationCenter/postNotificationName:object:userInfo:"><code>postNotificationName</code> definitely allows for a <code>userInfo</code> parameter</a>. Maybe it&rsquo;s a hidden typing error? According to the docs <code>userInfo</code> is supposed to be an optional dictionary like of type: <code>[NSObject : AnyObject]</code>. My key is a String which is bridged from <code>NSString</code>, which is an <code>NSObject</code> and <code>NSError</code> is also an <code>AnyObject</code>, so what gives?</p>

<figure class="center">
    <img alt="Lying" src="http://blog.swilliams.me/images/assets/xcode-lying-cat.jpg">
    <figcaption></figcaption>
</figure>


<p>After banging my head on the wall for a while I remembered that the <code>error</code> variable from <a href="https://github.com/Alamofire/Alamofire">AlamoFire</a> is an optional. Therefore, the correct declaration for <code>userInfo</code> is to unwrap the error:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>let userInfo = ["error": error!]</span></code></pre></td></tr></table></div></figure>


<p>And voilà, no more compilation errors.</p>

<p>&ldquo;Extra argument &lsquo;userInfo&rsquo; in call&rdquo; is a crappy error message. The proper one should have been something about values in the <code>userInfo</code> dictionary not being optional.</p>

<p>Swift is full of these unfortunately. Between these and your friendly SourceKit crashes it&rsquo;s getting untenable. My wish for 2015 is for Apple to address these shortcomings.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[O Christmas Roast]]></title>
    <link href="http://blog.swilliams.me/words/2014/12/29/o-christmas-roast/"/>
    <updated>2014-12-29T15:55:42-07:00</updated>
    <id>http://blog.swilliams.me/words/2014/12/29/o-christmas-roast</id>
    <content type="html"><![CDATA[<p><em>I posted this on Twitter. Here it is for posterity.</em></p>

<p>O Christmas Roast, O Christmas Roast!<br />
Thy rawness shall be ending<br />
O Christmas Roast, O Christmas Roast!<br />
Thy rawness shall be ending<br /></p>

<p>Inside the oven you shall go<br />
So that the juice within you flows<br />
O Christmas Roast, O Christmas Roast!<br />
Thy rawness shall be ending<br /></p>

<p>O Christmas Roast, O Christmas Roast!<br />
Such gravy will you make me!<br />
O Christmas Roast, O Christmas Roast!<br />
Such gravy will you make me!<br /></p>

<p>The thermometer will pierce your side<br />
Until your temp reads 125<br />
O Christmas Roast, O Christmas Roast!<br />
Such gravy will you make me!<br /></p>

<p>O Christmas Roast, O Christmas Roast!<br />
We&rsquo;ll set our teeth upon thee!<br />
O Christmas Roast, O Christmas Roast!<br />
We&rsquo;ll set our teeth upon thee!<br /></p>

<p>Two yards of plastic will we turn<br />
To avoid a chilling freezer burn<br />
O Christmas Roast, O Christmas Roast!<br />
We&rsquo;ll save you for another meal<br /></p>

<p>Each tasty bite<br />
Each dab of meat<br />
No other bite will fill my cheeks<br /></p>

<p>O Christmas Roast, O Christmas Roast!<br />
Within our guts digesting<br />
Within our guts digesting<br /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The iOS Development Calendarw]]></title>
    <link href="http://blog.swilliams.me/words/2014/12/08/the-ios-development-year/"/>
    <updated>2014-12-08T14:04:40-07:00</updated>
    <id>http://blog.swilliams.me/words/2014/12/08/the-ios-development-year</id>
    <content type="html"><![CDATA[<p><strong>January</strong>: &ldquo;We just had our biggest sales quarter ever!&rdquo; &ndash; Apple, adding another $20B to their bank account.</p>

<p><strong>April</strong>: Speculation of what&rsquo;s gonna be in the next version of iOS.</p>

<p><strong>June</strong>: WWDC. New things! Wow! Ideas abound! Flurries of productivity. &ldquo;Guys, I think Apple&rsquo;s playing nicer with developers now!&rdquo; &ndash; some people.</p>

<p><strong>July</strong>: Wow, this beta is really beta.</p>

<p><strong>September</strong>: iOS Next ships! New iPhone! Ship your app! Bugs!</p>

<p><strong>October</strong>: Weird rejections that don&rsquo;t make any sense.</p>

<p><strong>December</strong>: Blog posts and tweets about how Apple is screwing themselves with the byzantine app review process.<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup> Some rejections are overturned.</p>

<div class="footnotes">
  <ol>
    <li class="footnote" id="fn:1">
  <p><a href="http://www.panic.com/blog/transmit-ios-1-1-1/">You are here.</a></p>
</li>
  </ol>
</div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Things I Learned When Making a Podcast]]></title>
    <link href="http://blog.swilliams.me/words/2014/12/03/things-i-learned-when-making-a-podcast/"/>
    <updated>2014-12-03T07:42:25-07:00</updated>
    <id>http://blog.swilliams.me/words/2014/12/03/things-i-learned-when-making-a-podcast</id>
    <content type="html"><![CDATA[<p>We just published episode 2 of <a href="https://scott-williams-bc50.squarespace.com/podcast/2014/12/3/2-the-proliferation-of-duplo">the podcast</a>. I&rsquo;m still very new at this, but I&rsquo;ve already learned more than I anticipated. Most of these are forehead slappers that now you can avoid when you make your podcast.</p>

<p>If you want to do a <a href="http://thepodcastersstudio.com/tps-ep-47-recording-a-double-ender-podcast/">double-ender</a>, don&rsquo;t use Quicktime&rsquo;s built-in audio recording &ndash; it smushes all the audio into a single track. <a href="http://www.ecamm.com/mac/callrecorder/">Ecamm Call Recorder</a> or <a href="https://rogueamoeba.com/piezo/">Piezo</a> will keep them separate.</p>

<p>Have each person say something like &ldquo;Recording&rdquo; when they start recording their end of the call. This makes it orders of magnitude easier to line up the separate audio tracks during post production. <sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup></p>

<p>Plug your headphones directly into your microphone. Doing something else will likely lead to some nasty <a href="http://blog.swilliams.me/words/2014/12/02/how-to-add-a-noise-gate-in-garageband-10/">headphone bleed</a>.</p>

<p>If you&rsquo;re using a <a href="http://www.amazon.com/Blue-Microphones-Yeti-USB-Microphone/dp/B002VA464S/ref=sr_1_1?sr=8-1&amp;ie=UTF8&amp;keywords=blue%2Byeti&amp;tag=thepetzoo-20&amp;qid=1417634348">Blue Yeti</a>, switch to Cardioid mode. It&rsquo;s the &ldquo;heart&rdquo; or &ldquo;pacman&rdquo; symbol. Turn the gain down on it too.</p>

<p>You need to <a href="https://www.apple.com/itunes/podcasts/specs.html">submit your podcast feed to Apple</a> if you want your podcast to be in iTunes (and you really want that). According to their <a href="https://www.apple.com/itunes/podcasts/creatorfaq.html">FAQ</a> it can take 24 hours for that feed to be approved. But if you submit your feed on a common US holiday week, like say the Monday before Thanksgiving, it might take significantly longer.</p>

<p>If you have something pre-made you want to say on air, write it down first because your brain will simply refuse to cooperate if you try to just remember it.</p>

<div class="footnotes">
  <ol>
    <li class="footnote" id="fn:1">
  <p>Got this via <a href="http://www.theincomparable.com/theincomparable/">The Incomparable</a>, one of my absolute favorites.</p>
</li>
  </ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Let's Talk Photo Licensing]]></title>
    <link href="http://blog.swilliams.me/words/2014/12/02/lets-talk-photo-licensing/"/>
    <updated>2014-12-02T15:25:09-07:00</updated>
    <id>http://blog.swilliams.me/words/2014/12/02/lets-talk-photo-licensing</id>
    <content type="html"><![CDATA[<figure class="center">
    <img alt="trainwreck" src="http://blog.swilliams.me/images/assets/trainwreck.jpg">
    <figcaption><a href="https://flic.kr/p/5ZcYGy">&#8220;General View of Wreck, I.C.R.R., Farmer City, Ill., Oct. 5, &#8216;09&#8221;</a> by <a href="https://www.flickr.com/photos/caveman_92223/">Chuck Coker</a> on Flickr</figcaption>
</figure>


<p><a href="http://online.wsj.com/articles/fight-over-flickrs-use-of-photos-1416875564">Recently, Flickr started to sell photos uploaded by its users marked with the Creative Commons license that allows commercial use</a>. They&rsquo;ve taken <a href="http://www.zeldman.com/2014/11/29/flickr-is-about-to-sell-off-your-creative-commons-photos/">some</a> <a href="http://jensimmons.com/writing/i-dont-want-creative-commons-by-to-mean-you-can-rip-me-off">heat</a> for this. I understand being angry about this sudden change without much notification, but I don&rsquo;t think it&rsquo;s terribly suprising that they&rsquo;re doing this.</p>

<p>The Creative Commons <a href="http://creativecommons.org/licenses/by-nd/4.0/">license grants them plenty of rights</a>. It says in plain english, &ldquo;&hellip;copy and redistribute the material in any medium or format
for any purpose, even commercially&hellip; No additional restrictions — You may not apply legal terms or technological measures that legally restrict others from doing anything the license permits.&rdquo;</p>

<p>I used this license for the icon in <a href="http://emergencycontacts.org/">Emergency Contacts</a>. The <a href="http://thenounproject.com/term/siren/16374/">siren in it</a> was created by <a href="http://thenounproject.com/canabravatorres/">Daniel Canabrava Torres</a> and I found it by searching <a href="http://thenounproject.com/">The Noun Project</a>. I attributed him on the website and in the app, and did not pay him for it. I&rsquo;ve also used it to find photos for on this blog, like the one up top.</p>

<p>What else does that license mean? Almost anything.</p>

<p>It means that Coca-Cola could take your photo, make it part of a national campaign, put in on every billboard in the US, and not pay you a nickel. It means that Better Homes And Gardens with its <a href="http://en.wikipedia.org/wiki/List_of_magazines_by_circulation#United_States">7.5 million subscribers</a> could put your photo on the cover, and not pay you anything. It means that I could scrape Flickr and sell your photos myself, and keep all the revenues. As long as you are &ldquo;attributed&rdquo; in some way, it&rsquo;s all legal.</p>

<p>Flickr requires you to set some kind of license when you upload a photo. By <em>default</em> uses the most restrictive: &ldquo;All rights reserved&rdquo; (which precludes anyone but you from selling them), making the Creative Commons option <strong>opt-in</strong>. <sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup> You also have the opportunity to set a license on every photo when you upload it.</p>

<p>What about other websites? Here&rsquo;s <a href="https://www.facebook.com/legal/terms">Facebook&rsquo;s terms</a>:</p>

<blockquote><p>For content that is covered by intellectual property rights, like photos and videos (IP content), you specifically give us the following permission, subject to your privacy and application settings: you grant us a non-exclusive, transferable, sub-licensable, royalty-free, worldwide license to use any IP content that you post on or in connection with Facebook (IP License). This IP License ends when you delete your IP content or your account unless your content has been shared with others, and they have not deleted it.</p></blockquote>

<p><a href="https://help.instagram.com/478745558852511">Instagram</a> is nearly identical (no surprise considering they are owned by Facebook):</p>

<blockquote><p>Instagram does not claim ownership of any Content that you post on or through the Service. Instead, you hereby grant to Instagram a non-exclusive, fully paid and royalty-free, transferable, sub-licensable, worldwide license to use the Content that you post on or through the Service, subject to the Service&rsquo;s Privacy Policy, available here <a href="http://instagram.com/legal/privacy/,">http://instagram.com/legal/privacy/,</a> including but not limited to sections 3 (&ldquo;Sharing of Your Information&rdquo;), 4 (&ldquo;How We Store Your Information&rdquo;), and 5 (&ldquo;Your Choices About Your Information&rdquo;). You can choose who can view your Content and activities, including your photos, as described in the Privacy Policy.</p></blockquote>

<p><a href="https://twitter.com/tos">Twitter</a> has similar terms too:</p>

<blockquote><p>You retain your rights to any Content you submit, post or display on or through the Services. By submitting, posting or displaying Content on or through the Services, you grant us a worldwide, non-exclusive, royalty-free license (with the right to sublicense) to use, copy, reproduce, process, adapt, modify, publish, transmit, display and distribute such Content in any and all media or distribution methods (now known or later developed).</p>

<p>You agree that this license includes the right for Twitter to provide, promote, and improve the Services and to make Content submitted to or through the Services available to other companies, organizations or individuals who partner with Twitter for the syndication, broadcast, distribution or publication of such Content on other media and services, subject to our terms and conditions for such Content use.</p>

<p>Such additional uses by Twitter, or other companies, organizations or individuals who partner with Twitter, may be made with no compensation paid to you with respect to the Content that you submit, post, transmit or otherwise make available through the Services.</p>

<p>We may modify or adapt your Content in order to transmit, display or distribute it over computer networks and in various media and/or make changes to your Content as are necessary to conform and adapt that Content to any requirements or limitations of any networks, devices, services or media.</p></blockquote>

<p>You don&rsquo;t get any options when you share a photo on Facebook, Instagram, or Twitter. This is far worse. The language is loose enough that it grants them to do just about anything. If they want to sell it, they can, and keep all the proceeds.</p>

<p>In my opinion, all of these websites should make it clear what they are allowed to do with your photos, when you upload them. Right now, it&rsquo;s too obscured, and users probably aren&rsquo;t even aware of this.</p>

<p>If you really want control, and to maintain the licensing rights<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup> of your photos on the Internet, you have to host them all yourself. That kind of sucks, but it is the cost of the &ldquo;social&rdquo; Internet.</p>

<div class="footnotes">
  <ol>
    <li class="footnote" id="fn:1">
  <p>I created a new Flickr account to confirm this. It was All Rights Reserved by default.</p>
</li>
<li class="footnote" id="fn:2">
  <p>Note that there is absolutely nothing you can do to keep someone else from grabbing your photo and uploading it to some other place and claim ownership. I mean you could sue them, but that&#8217;s using a grenade to kill a housefly.</p>
</li>
  </ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Add a Noise Gate in GarageBand 10]]></title>
    <link href="http://blog.swilliams.me/words/2014/12/02/how-to-add-a-noise-gate-in-garageband-10/"/>
    <updated>2014-12-02T09:11:00-07:00</updated>
    <id>http://blog.swilliams.me/words/2014/12/02/how-to-add-a-noise-gate-in-garageband-10</id>
    <content type="html"><![CDATA[<p>GarageBand is a decent amateur audio editor and is also free. I use it to edit <a href="http://fronttoback.co">my podcast</a>, which has worked out ok.</p>

<p>Dealing with audio buzzing or humming can be a problem. Sometimes this can be <a href="http://en.wikipedia.org/wiki/Spill_%28audio%29">headphone bleed</a>, or ambient noise, or anything. A <a href="http://en.wikipedia.org/wiki/Noise_gate">noise gate</a> can fix that up pretty well if it isn&rsquo;t too loud<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>. What a noise gate does is analyze your audio and mutes any sound that is below a certain volume. GarageBand has this built-in but it is a little hard to find. It&rsquo;s interface has changed over different versions, so googling around for it often yields out of date information. Here is where it is in version <strong>10</strong>.</p>

<p>First click this knobby button.</p>

<figure class="center">
    <img alt="knobby button" src="http://blog.swilliams.me/images/assets/gb/knob.png">
</figure>


<p>This&rsquo;ll bring up a panel at the bottom with some additional controls. Click the information &ldquo;i&rdquo; button, turn off &ldquo;Master&rdquo;, and click &ldquo;Controls&rdquo; from the segmented control.</p>

<figure class="center">
    <img alt="controls" src="http://blog.swilliams.me/images/assets/gb/controls.png">
</figure>


<p>Finally, you&rsquo;ll have a checkbox labeled &ldquo;Noise Gate&rdquo; in that info side panel. Check it to turn it on, and use the slider to adjust how big of a gate you want.</p>

<figure class="center">
    <img alt="noise gate" src="http://blog.swilliams.me/images/assets/gb/noise-gate.png">
</figure>


<p>This will set the gate on the <em>entire</em> track that is selected up in the main UI. You can have different gates for different tracks, but I don&rsquo;t think you can different ones on a single track in GarageBand.</p>

<p>Once I scrape together a little more cash I might go out and get <a href="https://itunes.apple.com/us/app/logic-pro-x/id634148309?mt=12&amp;uo=4&amp;at=11lxUn">Logic Pro</a>. For now though, GarageBand works well enough.</p>

<div class="footnotes">
  <ol>
    <li class="footnote" id="fn:1">
  <p>Shoutout to <a href="https://twitter.com/jmetzendorf">Jim Metzendorf</a> for helping me out with this.</p>
</li>
  </ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My New Podcast]]></title>
    <link href="http://blog.swilliams.me/words/2014/12/01/my-new-podcast/"/>
    <updated>2014-12-01T14:37:23-07:00</updated>
    <id>http://blog.swilliams.me/words/2014/12/01/my-new-podcast</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve been a fan of podcasts for ages. I listened to <a href="http://grantland.com/podcasts/bs-report/">Bill Simmons&rsquo;s show</a> since it was called &ldquo;Eye of the Sports Guy&rdquo;. I listened to <a href="http://5by5.tv">Dan Benjamin&rsquo;s</a> shows before he made 5by5. About half of my t-shirts are ads for podcasts. So, when some friends asked if I wanted to make a podcast, I jumped at the chance.</p>

<p>It&rsquo;s a show about fathers raising their daughters. Our discussions range from the goofy stuff our girls do, to the idea that we need to maintain our masculinity being the sole male in the family, to heavier topics. We&rsquo;re calling it <a href="http://fronttoback.co">Front to Back</a><sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>. You can get it on <a href="https://itunes.apple.com/us/podcast/front-to-back/id945174610?mt=2">iTunes here</a>.</p>

<figure class="pull-right">
  <a href="http://fronttoback.co"><img alt="Front to Back art" src="http://blog.swilliams.me/images/assets/f2b-art.png" /></a>
</figure>


<p>I&rsquo;m co-hosting it along with my Internet friends <a href="http://jeffmueller.net">Jeff</a> and <a href="http://samdavies.me">Sam</a>. Right now we are aiming to record every other week. The first episode is a shade over half an hour, which seems like a pretty good duration to me.</p>

<p>It&rsquo;s gonna be a learning experience too. Going into this, none of us had ever recorded a podcast. I&rsquo;ve already learned more than I expected about production and audio editing. Watch this space because I&rsquo;m going to write about that process too. We&rsquo;re going to make a bunch of mistakes, but I think we have something here.</p>

<div class="footnotes">
  <ol>
    <li class="footnote" id="fn:1">
  <p>Yeah, it references *that*.</p>
</li>
  </ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Star Wars Episode VII Soundtrack Titles]]></title>
    <link href="http://blog.swilliams.me/words/2014/11/30/star-wars-episode-vii-soundtrack-titles/"/>
    <updated>2014-11-30T14:25:47-07:00</updated>
    <id>http://blog.swilliams.me/words/2014/11/30/star-wars-episode-vii-soundtrack-titles</id>
    <content type="html"><![CDATA[<p>I found the names of the songs on the Force Awakens Soundtrack. Don&rsquo;t worry, no spoilers. <sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup></p>

<ol>
<li>20th Century Fox Theme</li>
<li>Star Wars Main Theme</li>
<li>Luke&rsquo;s Noble End</li>
<li>Luke&rsquo;s Funeral</li>
<li>Han&rsquo;s Funeral</li>
<li>Luke&rsquo;s Funeral (reprise)</li>
<li>Luke&rsquo;s Funeral Again</li>
<li>A Cube Death Star?</li>
<li>Luke&rsquo;s Funeral</li>
<li>Falcon&rsquo;s Funeral</li>
<li>Constructing a New Lightsaber</li>
<li>Return of a Jedi Master</li>
<li>Luke&rsquo;s Funeral</li>
<li>Darth Fangy Rises</li>
<li>Darth Fangy&rsquo;s Funeral</li>
<li>Chewbacca Sandwich</li>
<li>Victory Fanfare</li>
<li>Luke&rsquo;s Funeral</li>
<li>Luke&rsquo;s Funeral</li>
<li>Luke&rsquo;s Funeral</li>
<li>End Credits</li>
</ol>


<div class="footnotes">
  <ol>
    <li class="footnote" id="fn:1">
  <p>For those of you who don&#8217;t get the joke, <a href="http://www.cracked.com/blog/the-5-most-ridiculous-ways-studios-spoiled-their-own-movies/">read this</a>.</p>
</li>
  </ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Copying the Current Page From Safari]]></title>
    <link href="http://blog.swilliams.me/words/2014/11/19/copying-the-current-page-from-safari/"/>
    <updated>2014-11-19T13:22:16-07:00</updated>
    <id>http://blog.swilliams.me/words/2014/11/19/copying-the-current-page-from-safari</id>
    <content type="html"><![CDATA[<p>If I&rsquo;m preparing a bunch of links for a blog post or something, it&rsquo;d speed things up if I could hit a button and have the computer do everything for me. Here&rsquo;s an <a href="https://developer.apple.com/library/mac/documentation/AppleScript/Conceptual/AppleScriptLangGuide/introduction/ASLR_intro.html">AppleScript</a> to do just that.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='applescript'><span class='line'><span class="k">tell</span> <span class="nb">application</span> <span class="s2">&quot;Safari&quot;</span>
</span><span class='line'>  <span class="k">set</span> <span class="nv">theURL</span> <span class="k">to</span> <span class="nv">URL</span> <span class="k">of</span> <span class="nv">current</span> <span class="no">tab</span> <span class="k">of</span> <span class="na">window</span> <span class="mi">1</span>
</span><span class='line'>  <span class="k">set</span> <span class="nv">theTitle</span> <span class="k">to</span> <span class="na">name</span> <span class="k">of</span> <span class="nv">current</span> <span class="no">tab</span> <span class="k">of</span> <span class="na">window</span> <span class="mi">1</span>
</span><span class='line'>  <span class="nb">set the clipboard to</span> <span class="s2">&quot;[&quot;</span> <span class="o">&amp;</span> <span class="nv">theTitle</span> <span class="o">&amp;</span> <span class="s2">&quot;](&quot;</span> <span class="o">&amp;</span> <span class="nv">theURL</span> <span class="o">&amp;</span> <span class="s2">&quot;)&quot;</span>
</span><span class='line'><span class="k">end</span> <span class="k">tell</span>
</span></code></pre></td></tr></table></div></figure>


<p>That&rsquo;ll copy the URL and title of the current tab in Safari as a nicely formatted <a href="http://daringfireball.net/projects/markdown/">Markdown</a> link. I tied that into a <a href="http://www.keyboardmaestro.com/main/">Keyboard Maestro</a> shortcut, so that I can quickly make the link with ⌘⌥⌃C, then paste it into whichever document I&rsquo;m working in.</p>

<p>This&rsquo;ll probably work with Chrome too, but I don&rsquo;t know how much it supports AppleScript.</p>
]]></content>
  </entry>
  
</feed>
