<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Scott Williams]]></title>
  <link href="http://blog.swilliams.me/atom.xml" rel="self"/>
  <link href="http://blog.swilliams.me/"/>
  <updated>2018-12-11T11:23:57-07:00</updated>
  <id>http://blog.swilliams.me/</id>
  <author>
    <name><![CDATA[Scott Williams]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[My Recruiting “Trick” - The Good, The Bad, and The Middle]]></title>
    <link href="http://blog.swilliams.me/words/2018/12/11/my-recruiting-trick-the-good-the-bad-and-the-middle/"/>
    <updated>2018-12-11T11:11:51-07:00</updated>
    <id>http://blog.swilliams.me/words/2018/12/11/my-recruiting-trick-the-good-the-bad-and-the-middle</id>
    <content type="html"><![CDATA[<p><a href="http://blog.swilliams.me/words/2018/11/01/building-trust-on-teams/">Trust is a recurring theme</a> in my management style and I try to start building it before I’ve hired people. Trust is formed when one side of a relationship opens themselves up in a way that makes them a little more vulnerable. Since it is uncommon for the hiring side to initiate this, I’ve tried going against that grain. It’s a fine line to walk. Paint the wrong picture in the name of “transparency” and people will flee. But do take a long look and be honest in the reality of your company and team. Nothing is perfect, but nobody is looking for perfection, so don’t paint it that way.</p>

<p>For a few years I kept a running document I called &ldquo;The Good, The Bad, and The Middle&rdquo; which detailed the great parts of my employer, the not-so-great parts, and the stuff that was a bit of a mix. I didn’t send it out until we were approaching the end of the hiring process and had established a rapport with the candidate. Trust also can’t be developed if you don’t know a few things about each other first.</p>

<h2>The Good</h2>

<p>This is easy. What are the best things about the company and my team in particular? Make it more than &ldquo;the people are great!&rdquo; The most common question candidates ask is “What’s your favorite part of working here?” And the most common answer, by far, is “oh, it’s the people!” Which is good to say, but you can distinguish yourself and your company by going further than that. This is your opportunity to brag a bit about what kind of culture those &ldquo;great people&rdquo; have created and what the candidate will get to do when they&rsquo;re hired. One line I have is “You have a significant stake in the company&rsquo;s future and our bottom line. If you do well, we do well. If you stink up the place, we may lose a client (that&rsquo;s bad).“</p>

<p>This <em>should</em> be the longest list of the three categories, but don’t BS it to make it longer. This is the flip-side to the make-your-weaknesses-your-strength-sometimes-I-care-TOO-much bit. People will detect it in an instant and then put you in the box with all the other hyperbolic managers that aren’t connected to reality. That box is massive. Avoid it.</p>

<h2>The Bad</h2>

<p>This one’s not so easy. As a manager, you know many sore spots, and sharing them with someone brand new can quickly overwhelm. Presumably, you are working to fix them. State that, and how. If you are not, or have certain things de-prioritized, state that too. For example, this was one of my bullets: “Our on-boarding has gotten loads better, but isn&rsquo;t great yet. You may feel a little confused your first few weeks.” It paints an accurate picture of what they’ll be getting into. Some of these things are universal — who is truly happy with their on-boarding anyway? — and shouldn’t shock anyone.</p>

<p>This part is also an opportunity to get a candidate to buy in to helping fix the sore spots. “We aren’t great at [thing] yet, and I want to improve it. I will be looking to you to help us figure that out.“ Do note that this needs to be realistic and within the purview of their job. “I need you to fix the institutional sexism in our company” isn’t gonna fly for a senior engineer, but “help us improve how we work with a mix of remote and on-site people” might.</p>

<h2>The Middle</h2>

<p>Note: this isn’t The Ugly. The Ugly goes in with The Bad. In my list I wrote about benefits, travel, the office plan, and similar topics. These are things that may be listed in the job description, but could stand to be fleshed out a more.</p>

<p>Some may have at one time been in the Bad list, but have improved. Maybe not to the point of being on the Good list, but worth moving. For example, we as a company improved our diversity over the course of a year and while it wasn’t what I’d call “awesome”, it had the right trajectory, and I wanted to highlight that.</p>

<p>Ok, so now you’ve got a mostly complete list. Next step is to tailor it for the candidate and the position. Someone fresh out of college should not receive the same list as a staff engineer. Further, the list should be kept up to date. I like to update it every time I’m going to send it out. It shouldn’t be a novel either. Nobody will read it if it’s too long. My last iteration clocked in at about 900 words — a little less than the size of this post. Lastly, you need to be mindful of any kind of real restrictions that might affect what you can say. Don’t violate SOX or an NDA.</p>

<p>This sounds like work, and it is, so why put forth the effort? It conveys that you will be level with a candidate and begins a relationship from a position of trust. For me, it worked like gangbusters. Every single person I sent it to, even if they ended up being hired or not, said it increased their likelihood of accepting an offer.</p>

<p>Establishing trust that early in the game greatly benefited how I recruited people, and opened up a whole swath of discussion points that could be touched on during the hiring process, or in a one-on-one after hiring. It’s the start of the virtuous cycle of trust.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What Are You Struggling With?]]></title>
    <link href="http://blog.swilliams.me/words/2018/11/30/what-are-you-struggling-with/"/>
    <updated>2018-11-30T10:33:40-07:00</updated>
    <id>http://blog.swilliams.me/words/2018/11/30/what-are-you-struggling-with</id>
    <content type="html"><![CDATA[<p>Here’s another interview question you’ll face: “What is something that you’ve struggled with and what have you done to fix it?” I view this differently from <a href="http://blog.swilliams.me/words/2018/11/18/failure-and-ultimately-fixing-it/">“What have you failed at?”</a> Because to me this is more of a behavior than a single point in history.</p>

<p>I struggle with being organized. In my youth, I had a very good memory and could keep a ton of things in my head. This helped out quite a bit in school, but it also allowed me to develop some pretty bad habits: Namely, I never developed a way to keep my crap together. I still have an excellent memory for certain things that don’t matter at all. If you need a Star Wars or a Star Trek reference? I’m your guy. But God help me if you’re depending on me to remember to take the trash out before bed.</p>

<p>In my 20’s this became a problem and I needed to fix it because I was missing stuff. I started to develop my own system over time. I’ve iterated on it, blown it up, and tried most of the $11.99 Getting Things Done methodologies out there. What I’ve ended up with are some relatively basic tasks that work for me and my broken brain.</p>

<p>I am religious about my calendar. If it is not on my calendar it does not exist. If it’s on my calendar there is a 99% chance I will attend whatever it is, though there’s the odd occasion where the blast of notifications about pending meetings will be completely missed. <sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup></p>

<p>I’ve become more diligent about writing things down. I don’t have a perfect system for this yet. I’ve oscillated between pen &amp; paper, typing on a laptop, and iPad + Pencil. My goal is to have all of my notes from the day tracked in a searchable format. I’ve used <a href="https://dayoneapp.com">Day One</a> for this in the past, but I haven’t been terribly thrilled with some of their design decisions as of late. I’m reconsidering iPad + Pencil since I’ve seen some colleagues do some great stuff with that and <a href="https://www.gingerlabs.com">Notability</a>.</p>

<p>I use <a href="https://www.omnigroup.com/omnifocus/">OmniFocus</a> in a fairly simplistic way. I keep a few running lists called “Today”, “This Week”, and “This Quarter” where I put all of my todos. These could be “Reply to Jake’s email from the 4th” or “Make a feeding chart for the fish”. I try to find a balance between detail and speed when creating  task names. I will forget what “Reply to Jake” means. Reply where? Text? Email? Slack? If there’s more than one email from Jake I’ll add that detail too. I know I’m only using the tip of the iceberg that OmniFocus provides, but I don’t need any more <em>right now</em>. I’ve tried to go hog wild with automations and shortcuts and all that and I get overwhelmed and then regress even further. I need my task management system to be nearly brainless, otherwise it will fall by the wayside. If it’s more than “unlock phone → tap a couple buttons → type words” then there’s a good chance it won’t be entered.</p>

<p>I’m also a little wary of the time required to automate task management. Often times I don’t think it balances out to a valuable amount of time saved. And then remembering how to use the automations or shortcuts adds to the cognitive load… leading to a less likelihood of actually getting done.</p>

<p>Lastly, I am still working on the discipline of starting and ending my work day properly. Ideally I’ll get in to work, review my calendar and outstanding tasks for the day and update everything, and start things off well. And then at the end of the day, close things down by reviewing/entering notes, prepping for tomorrow, and setting things up for success. That’s still not a practice I’ve made into a habit yet, but I’m working on it.</p>

<div class="footnotes">
  <ol>
    <li class="footnote" id="fn:1">
  <p>This is one of the few things where I want MORE and STRONGER notifications than normal.</p>
</li>
  </ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Deciding When a Fix is Worthwhile]]></title>
    <link href="http://blog.swilliams.me/words/2018/11/21/deciding-when-a-fix-is-worthwhile/"/>
    <updated>2018-11-21T09:56:10-07:00</updated>
    <id>http://blog.swilliams.me/words/2018/11/21/deciding-when-a-fix-is-worthwhile</id>
    <content type="html"><![CDATA[<p>Beth had asked for my opinion on a feature she was finalizing. The project was a biggie — year long, 20+ engineers, many different tech stacks that had to integrate with legacy code, etc. I sat down and she showed me her laptop screen and then groaned. “I forgot to turn on the Product Set feature flag. Hang on.” She sighed. She tapped out a few keys and then sat there. We waited. And waited. A minute and a half went by, which is an <a href="https://xkcd.com/303/">eternity when you’re waiting for code</a>. Finally it launched. Then she had to click around a few times to get back to the screen that had the thing she was demoing.</p>

<p>The feature was fine, in fact I don’t even remember what it was. What concerned me was how long the feedback loop was between changing code and then seeing the effect of that change. The longer that delay is, the less productive people are. I decided to bring it up.</p>

<p>“Uh, so that build time seems pretty long… what happened to the automatic reloading?”</p>

<p>“Oh, that’s been broken for weeks. The only way to bring up the site is to run it in prod.”</p>

<p>&lt;strange high-pitched sound I make when I’m trying to remain calm but not doing so great at it></p>

<p>This was bad. Not <a href="http://blog.swilliams.me/words/2018/11/18/failure-and-ultimately-fixing-it/">“we’re screwed”</a> bad, but still, not good. A production build on this app meant that even if a change was small, the build system would need to process all tens of thousands of lines of code to implement the change. A developer will make hundreds of changes to code in a day, and then compound that by the number of people on the team and pretty soon you’re talking a big chunk of time. Further, production mode meant that a lot of debugging tools weren’t available. This was a React app, and there was a <a href="https://github.com/facebook/react-devtools">rich ecosystem of tooling</a> that couldn’t be used.</p>

<p>After a little more prodding it turned out that this started happening when we had to consolidate both the back-end API and the front-end React code into a single repository<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>, and the developer who did that was in a time crunch and did it quickly, which broke the automated build. The fix was spending a little bit of time to update the build scripts to allow both the API and front-end to run in debug mode concurrently. It took about four hours to research, implement, and test. That response loop dropped to just a few seconds, debug tools were available again, and there was much rejoicing.</p>

<p>Four hours is not much time in the grand scheme of things. But, that time was never budgeted in any sprint planning, triage, or any other kind of scheduling meeting. A common trap that developers can fall into is tunnel vision. “Just get the task done. Just get the task done. Just get…” and lose sight of the forest because of the trees. To go back up in the story briefly, I should say that Beth is a <em>fantastic</em> developer and consistently built systems quickly and at a high standard of quality, but even someone like that can slip into an anti-pattern.</p>

<p>A management super-power that is worth developing is to identify tunnel vision when it happens and correct it. This can be tricky because another common trap is to spend far more time automating a process than time spent dealing with the <a href="https://xkcd.com/1319/">“problem”</a> manually. Here’s the criteria I use when making this determination:</p>

<ol>
<li>How much time is wasted each time the problem occurs? And what’s the frequency?</li>
<li>How many people encounter this?</li>
<li>Will either of those numbers increase or decrease over time?</li>
<li>How much time will the fix take? (This assumes the fix is a known quantity.)</li>
</ol>


<p>In this case, #1 was a trivial amount of time compounded by its frequency, then compounded by #2. And since code has a tendency to only grow over time, which increases build time, #3 is going in the wrong direction too. Based on that, adding more people to the project will <em>increase</em> the time spent dealing with the issue. Unless the fix was gonna take months this was a no-brained. Fortunately, I was familiar enough with the build system that I could take a reasonable stab at estimating #4 and knew it wouldn’t take long.</p>

<p>If you’ve answered those questions and are still unsure of the direction to go, I recommend following <a href="https://pragdave.me/blog/2014/03/04/time-to-kill-agile.html">Dave Thomas’s advice about working with agility</a> (little A). I have a lot of criticisms about the <a href="https://pragmaticmarketing.com/resources/articles/getting-back-to-the-roots-of-agile">state of Agile</a> (capital A) these days, but this is gold:</p>

<blockquote><p>When faced with two or more alternatives that deliver roughly the same value, take the path that makes future change easier.</p></blockquote>

<p>In this case, the tradeoff was simple. Speeding up the build and the evaluation loop of software development will absolutely make future changes easier, and it’s almost always worth putting in extra effort to improve those.</p>

<p>I like situations like these. I mean, I don’t seek them out, but when they happen, it feels great to solve them. The solution wasn’t painful, and the result made the team faster and better. That’s a big win.</p>

<div class="footnotes">
  <ol>
    <li class="footnote" id="fn:1">
  <p>Sometimes clients like to throw wrenches into things. It’s fun.</p>
</li>
  </ol>
</div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Failure and Ultimately Fixing It]]></title>
    <link href="http://blog.swilliams.me/words/2018/11/18/failure-and-ultimately-fixing-it/"/>
    <updated>2018-11-18T13:42:04-07:00</updated>
    <id>http://blog.swilliams.me/words/2018/11/18/failure-and-ultimately-fixing-it</id>
    <content type="html"><![CDATA[<p>I’ve been debating writing this because it requires me to open up in a way that isn’t all that comfortable for me. Specifically, I want to talk about making mistakes and then dealing with the fallout from them. It’s good to talk about this—“Tell me about a time you screwed up and how you overcame it” has been asked in every single management interview ever since the dawn of time. But, while knowing how to answer interview questions well is more theater than reality, it’s good to address the hard questions for personal growth’s sake.</p>

<p>Here’s how it went down. I was juggling many projects, and to borrow a flight metaphor, operating each from about 50,000 feet. That in itself isn’t bad. In fact in my opinion if managers are too low to the ground then they aren’t managing, or are teetering too close to micro-management range. But, and here’s where my mistake was, I didn’t have a timely way to know when I needed to get closer to the ground. The only mechanism was for someone to say, “Hey Scott, how’re your kids? Getting big huh, wow. Oh, you know that year long project that makes up a big chunk of our revenue? Yeah, there’s no way that’ll ever ship. K, byyyye.”</p>

<p>Uh oh. I obviously had a mess on my hands and needed to jump in and coordinate the effort. The specific actions to land that sucker aren&rsquo;t necessary to list out so I&rsquo;ll skip ahead to the ending, which was a mixed bag. The thing did ultimately ship, but at a great cost. Many extra, stressful weeks were needed (which meant our bottom line was garbage) but even worse was that there was turnover directly associated with it. People left the company because of this. Ugh.</p>

<p>Failure can be a <a href="https://youtu.be/WlxRwGwRS4w">great teacher</a>, so here’s what I was able to pull from that in the hopes of not doing it again.</p>

<p>Many things went wrong, but here&rsquo;s where I think my failure was. I needed better tools to know the state of my team and my projects. Word of mouth is a lousy way for critical information to be relayed. It gets changed, filtered, and takes too long to propagate. I want to be clear that the mistake was not that there was a cluster of a project brewing. As long as you have people, <a href="https://arresteddevelopment.fandom.com/wiki/Hop-ons">you’re gonna get some clusters</a>. The mistake was that it took me too long to see the need to get closer to the ground to coordinate the effort. I needed to be at 10,000 feet months earlier. Had I done that, the actions would have been more course corrections than dire changes. The impact would have been smaller.</p>

<p>The solution to that is hard. Better intel can come from automated reports. Getting reports is easy, but getting the <em>right</em> information out of reports is not. For example, a <a href="https://en.wikipedia.org/wiki/Burn_down_chart">burn down chart</a> can offer a valuable data point, but if the slope of the graph doesn’t perfectly match the ideal scenario, you can’t immediately parachute in to “fix” things.</p>

<p>Further, any additional processes or tools introduced <strong>cannot</strong> introduce friction. As a manager you need to reduce that. At one point some years ago I was on one project where every single commit to source control had to have an issue tied to it. There ended up being multiple “Stuff” or “Misc” issues that junked up the system, negating any info that a report could provide.</p>

<p>Fixing a problem like this is gonna take some iteration. It’s like a mini-project all on its own, so don your project management hoodie and get to work. You have stakeholders (your team), and you need to solicit their feedback and understand the problem and what the ultimate solution looks like. And like software, this is never done.</p>

<p>I&rsquo;m pretty sure this won&rsquo;t be my last failure. But as I do fail I will continue to seek to understand what my part in it was and push myself to improve. Once I do have it all figured out I&rsquo;ll be sure to share the results.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Whining vs Venting]]></title>
    <link href="http://blog.swilliams.me/words/2018/11/13/whining-vs-venting/"/>
    <updated>2018-11-13T08:14:11-07:00</updated>
    <id>http://blog.swilliams.me/words/2018/11/13/whining-vs-venting</id>
    <content type="html"><![CDATA[<p>It was time for my one-on-one with Ron and I could tell it would be a doozy. He slumped into a chair and before I could even start with a basic “how’s it going?” he launched into a tirade about Sales and how they were screwing us over <em>again</em> and that he had to pick up the extra load. This is a not exactly a unique case—there’s a natural tension between promise and delivery and there’s more than a kernel of truth to it. Ron was really steamed this time though. It could be he needed to vent, but maybe he was just whining.</p>

<p>I don’t like whining. I have two kids who are approaching teenage-dom, and I have enough of it in my life already, thank you very much. Whining from adults is especially grating—they should know better, but it still happens.</p>

<p>I view whining as subtly but distinctly different from venting. And what is that difference you ask? Whining focuses on “woe is me!” and doesn’t lend itself to finding solutions. A whiner wants everything and everyone around them to change to accommodate themselves and their needs. Further, whining tends to beget more whining; whereas when a good old fashion vent is complete, progress can be made. Venting can be healthy.</p>

<p>I actually kinda like hearing a good <a href="http://randsinrepose.com/archives/the-update-the-vent-and-the-disaster/">vent</a> session. If someone is venting to me directly, then it means they have some level of <a href="http://blog.swilliams.me/words/2018/11/01/building-trust-on-teams/">trust</a> with me. They’re opening up and spilling out a little bit of themselves. This means you need to be wearing your listening hat. Vents can get emotional—this is good—it means the venter is invested deeply in something and that they care. So, listen! With empathy!</p>

<p>As you’re listening (with empathy), consider the context. They have their point of view and you have yours. They are much closer to the ground floor of the situation they are experiencing, but as a manager you Know Things that they may not. You can use this knowledge to nudge the conversation and keep it a vent rather than a whine, but don’t try to fix the problem. Something incredible can happen when someone is venting: by talking through it they may discover a solution all on their own. This is good. If it sounds like therapy, it kind of is!</p>

<p>Can you turn a whine into a vent? I think you can, but it may be a struggle. Sometimes it may be asking a pointed question: “Oh wow, that <em>is</em> a mess… what can we do to tweak it a bit?” Dig in and ask constructive questions, though try to steer things towards the realm of productivity. If you have a strong enough relationship consider plainly stating it, “this almost sounds like a whine. Is there a way to frame it so that there is the potential for a solution here?” It may not work, but that’s a whole other ball of wax.</p>

<p>Fortunately, once Ron got it all off his chest he calmed down a bit and evaluated his own communication with the sales team. It wasn’t actually the end of the world (this time), and he picked up a few pointers for how to work a little more effectively with them in the next go around.</p>

<hr />

<p><em>Shout out to <a href="http://jeffmueller.net">Jeff Mueller</a> for helping edit this.</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Building Trust on Teams]]></title>
    <link href="http://blog.swilliams.me/words/2018/11/01/building-trust-on-teams/"/>
    <updated>2018-11-01T16:29:52-07:00</updated>
    <id>http://blog.swilliams.me/words/2018/11/01/building-trust-on-teams</id>
    <content type="html"><![CDATA[<p>Let’s talk about trust. Team members who trust each other feel psychologically safe. This means they’ll be emboldened to act as themselves without fear of blowback or negative repercussions. They’ll focus on the work in front of them without worrying about their boss or co-workers blasting them for it, even if they make mistakes. The opposite is a detriment &ndash; they burn too much time double and triple checking every last bit of communication making sure it falls in line with arbitrary office politics.</p>

<p>One of the pillars of psychological safety is trust. Trust that happens  between manager and employee, and also trust from team member to team member. That kind of trust takes time to build up, but the good news is that the process can begin at any time.</p>

<h2>Tell them the things you probably don’t want to</h2>

<p>I like to tell my teams the things I’m nervous about. At one team meeting, I spoke at length of the actions the company can take to “spy” on employees, such as that their inbox is forwarded to me once they leave the company or that all it takes is a few clicks from the IT department and I could read every single email or slack message that they have sent. Most of the team already knew that in theory, but hearing from me just how <em>simple</em> it is was a bit of an eye opener. I also said how many times I had personally taken those measures (very, very rarely, and only for good reasons).</p>

<p>It was a bit of an awkward conversation, but it engendered trust between all of us because they knew what kind of power I could wield, even if I rarely used it. It also gave them an understanding of what they’d need to be cautious of if they needed to have a truly <em>private</em> conversation with me or each other. Understanding what kind of privacy you do or do not have is important for trust.</p>

<h2>Ask if they understand their part in the company’s bottom line</h2>

<p>It’s good for one to know, whether significant or not, how their work impacts how your company makes money. I like to ask this question in my 1:1s with my direct reports and the answers are occasionally surprising. It might be obvious to you, the manager, how the corporate machine works, but for a worker it may not be.</p>

<p>Here’s an example: I’ve worked in service organizations for most of my career. At a basic level,  this means you track the hours you work for a client and that time is billed to them. Relatively straightforward, but there are many more details that go in to the equation. What happens if deadlines are missed? What happens if a client is NET 180 (meaning they don’t pay invoices for 180 days &ndash; half a year(!))? And, if that’s the case, how does that affect the company’s revenue and reporting, because brother you better believe it does.</p>

<p>Even if an employee is “just” a tiny cog in a massive machine, it’s beneficial for them to understand how their contribution helps the wheels of the company turn. Knowing that their work is important to someone somewhere allows them to take pride in what they do &ndash; their work matters! (If their work doesn’t actually matter… then you should fix that)</p>

<h2>Be honest when delivering bad news, but not too honest</h2>

<p>If you’re a manager, you’ll probably know about bad news first. Don’t sugar coat it or try to spin it into a positive if there isn’t a silver lining. “We’re gonna miss our target for the quarter. That ain’t great.” Rather than “Team, I’m very excited about a big opportunity for us to demonstrate our grit and perseverance to our customer base and blah blah blah.” Employees are smart and will sniff out the BS… and when that happens, trust plummets.</p>

<p>It’s ok to say what you’re feeling, but be careful if things aren’t looking good. “We missed our numbers and it’s sales’s fault and I think we’re screwed” might seem true in the moment but it can become a self-fulfilling prophecy even when that particular situation might have still had hope. If your own personal cynicism and pessimism is leaking out in your communication, you’re not doing your job as a leader. Your duty to your team is to motivate them and to empower them to do good work. Instead, “Look, we missed our target, and that’s not good. I’m nervous and I’m also a little scared because it means things could get worse for us. BUT, there <em>is</em> a way out and here’s what we’re gonna do…” conveys the seriousness of the situation, as well as your own personal feelings, but also presents a path forward so that people don’t just dwell on the crisis.</p>

<p><em>[Note: if it is catastrophic, <a href="https://kotaku.com/telltale-employees-left-stunned-by-company-closure-no-1829272139">like the whole company is shutting down</a>, treat people like adults and deliver that news promptly so that they don’t have to panic and scramble to find new jobs.]</em></p>

<p>This list is not exhaustive, but I have found these things to be particularly effective. Trust is built up over time. It takes constant care and attention to grow, must be demonstrated consistently, and can be lost in a heartbeat if you ever stop treating your employees like the fully actualized humans that they are.</p>

<hr />

<p><em>Shout out to <a href="http://samdavies.me">Sam Davies</a> for helping edit this.</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[I'm a Fast Learner]]></title>
    <link href="http://blog.swilliams.me/words/2018/10/23/im-a-fast-learner/"/>
    <updated>2018-10-23T10:07:07-07:00</updated>
    <id>http://blog.swilliams.me/words/2018/10/23/im-a-fast-learner</id>
    <content type="html"><![CDATA[<p>When I&rsquo;m hiring, I hear this one a lot. A candidate is nervous about something that I just asked, let&rsquo;s use <a href="https://graphql.org">GraphQL</a> as an example, about and they&rsquo;ll say &ldquo;Well, I don&rsquo;t know much about GraphQL, but I&rsquo;m a fast learner!!&rdquo; and their earnestness nearly jumps out of their body and does a little dance.</p>

<p>Here&rsquo;s the thing. I hear that phrase <em>all the time</em>. I imagine so does every other hiring manager. And this may sound mean, but so what? If everyone is truly a fast learner, what separates you from the rest? Also, I can probably find someone who already knows GraphQL in the stack of resumes I&rsquo;m procrastinating in sifting through. What&rsquo;s my motivation to keep going with you?</p>

<p>Yeah, that&rsquo;s definitely harsh, but it&rsquo;s reality. Hiring managers are usually stressed and need to find the right person very badly. Here&rsquo;s a way to play to that need and flip the situation. Start with this:</p>

<blockquote><p>Wow, it sounds like GraphQL is a bigger deal for this role than I originally thought, and it sounds like I&rsquo;m a little out of my depth. This still sounds like a dynamite job though, so here&rsquo;s what I&rsquo;m going to do: Tonight I&rsquo;m going to watch the <a href="https://egghead.io">egghead.io</a> series on GraphQL. Then over the next week I&rsquo;m going to build a little project that consumes the GitHub GraphQL API. I&rsquo;ll send it to you if you&rsquo;re still interested. How does that sound?</p></blockquote>

<p>That&rsquo;s a lot better than &ldquo;I&rsquo;m a fast learner, please hire me.&rdquo; It acknowledges the problem (a gap in expectations), and then presents a solid plan for how to overcome it. Further, that candidate shows crazy kinds of initiative, as well as a strong desire for the job, without coming off as begging. And lastly, it&rsquo;d show me some code, which is very useful when hiring a developer.</p>

<p>It&rsquo;s not a guarantee that you&rsquo;ll get the gig, but will at least impress the interviewer.</p>

<p>Other things:</p>

<p>If the job description wasn&rsquo;t clear about the requirements for GraphQL in the first place&hellip; that&rsquo;s a miss on the hiring manager&rsquo;s part.</p>

<p>Also, that response presumes that the candidate has the free-time to do all that, which is not the case for everybody.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Book Report: Dead Mountain]]></title>
    <link href="http://blog.swilliams.me/words/2018/01/28/book-report-dead-mountain/"/>
    <updated>2018-01-28T15:45:39-07:00</updated>
    <id>http://blog.swilliams.me/words/2018/01/28/book-report-dead-mountain</id>
    <content type="html"><![CDATA[<p>I have a weird fascination with high altitude/cold weather disasters and mysteries. I’ve watched every documentary on Netflix about Everest disasters, <a href="https://www.netflix.com/watch/70268450?trackId=13752289&amp;tctx=0%2C0%2Cfcfcdc13-2e02-4aa4-be4f-53f68f4238ee-107915969">K2 disasters</a>, read Krakauer’s books, and I still can’t get enough of the stuff. I&rsquo;ve watched so many that they&rsquo;ve started to all blur together, and I have trouble remembering which is which&hellip; I’m not sure why I find it all so fascinating; I have no interest in actually going and having those adventures, but something about confronting those extremes are just interesting to me.</p>

<p>I also dig unexplained phenomenons. I watched a lot of <a href="https://en.wikipedia.org/wiki/Unsolved_Mysteries">Unsolved Mysteries</a> as a kid, and they always stuck with me. So, the story of the <a href="https://en.wikipedia.org/wiki/Dyatlov_Pass_incident">Dyatlov Pass Incident</a> is right in my wheelhouse. The gist is: in 1959 a group of Russian college students went on a long hike/camping trip through the Ural Mountains. One night they all abandoned their tent and ran out in the middle of the night in -40 degree weather without shoes or proper cold-weather gear on. They were discovered a month later buried in the snow, and nobody could figure out the cause. They were all experienced campers in a very remote region. Theories included avalanche, a lovers quarrel, wild animals, indigenous people turned murders, the KGB, rogue science experiments gone wrong, and, of course, aliens.</p>

<p>So, it was only natural that I’d be interested in <a href="https://www.amazon.com/Dead-Mountain-Untold-Dyatlov-Incident-ebook/dp/B00CUSQOA0/ref=sr_1_1?sr=8-1&amp;ie=UTF8&amp;keywords=dead%2Bmountain%2Bthe%2Buntold%2Btrue%2Bstory%2Bof%2Bthe%2Bdyatlov%2Bpass%2Bincident&amp;tag=thepetzoo-20&amp;qid=1516651192">Dead Mountain &ndash; The Untold True Story of the Dyatlov Pass Incident</a>. The author goes through meticulous detail to find out everything he possibly could about the expedition, the rescue (and then recovery) party, and his own experiences traveling to Russia to try to retrace some of their steps 50 years later.</p>

<p>I enjoyed reading this. The author provided enough context of the group, their motivations, and the climate of the Soviet Union at the time without going too far off the rails. He also breaks down each theory, even some of the outlandish ones, and points out the strengths and flaws in each of them.</p>

<p>My favorite chapter came towards the end when he switches into speculation mode, and weighs all of the facts and evidence and then comes up with a plausible explanation. I don’t want to spoil anything, but it seems convincing.</p>

<p>If you’re into this kind of thing, it’s worth checking out.</p>

<p>Oh yeah, Hollywood also made a movie “about” the story a few years ago. I didn’t see that one, but it included time-travel and teleporting mutants apparently. I think we can rule that one out.</p>

<p><em>[One of my goals for 2018 is to read 12 books in the year. Some of you may scoff at that number but while I love to read, I haven’t had time as of late to indulge in that. This year I am making the time.]</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How I Read Resumés]]></title>
    <link href="http://blog.swilliams.me/words/2018/01/21/how-i-read-resumes/"/>
    <updated>2018-01-21T13:46:50-07:00</updated>
    <id>http://blog.swilliams.me/words/2018/01/21/how-i-read-resumes</id>
    <content type="html"><![CDATA[<p>I see a lot of resumés. <a href="https://tallwave.com">We&rsquo;re a growing company</a>, and <a href="https://jobs.lever.co/tallwave.com">are hiring often</a>, so the rate of resumés that cross my desk has only gone up. I care quite a bit about my team and hire with great care, so I say &lsquo;no&rsquo; most of the time. If you wanted to know how to get a leg up on my hiring process, and perhaps others&#8217;, here&rsquo;s how I scan and determine pass/reject on resumés.</p>

<p><em>[Note: this is <strong>my</strong> process. I am not stating it is the best or that it will work in any other situation. This is just how I do it.]</em></p>

<p><strong>Step 1</strong>. Reject the grossly unqualified. These are the people who may very well have applied for the wrong job by accident, or just don&rsquo;t care and apply to every single job they can find. The most memorable of these was someone who&rsquo;s closest relevant experience to a senior developer position was that they were a college mascot&hellip;</p>

<p>Also, double check to make sure you find and replace the right strings in your cover letter. &ldquo;I really want to work at [Some Other Company]!&rdquo; looks bad on you. Speaking of cover letters:</p>

<p><strong>Step 2</strong>. Reject those who don&rsquo;t read the job description. I include a blurb like this on every job description I post:</p>

<blockquote><p>Do not just send in a resume. Tell us your story. What have you built that makes you proud? How have you demonstrated leadership? What are your aspirations? What are you passionate about? What are you dying to learn next? Share with us the stuff that makes you stand out. This could be something as simple as a well-crafted cover letter, or something public that you had a hand in creating.</p></blockquote>

<p>You&rsquo;d be surprised how many people don&rsquo;t do any of that (or actually, if you&rsquo;ve ever hired anyone before, you are completely not surprised in the least). If there is nothing but a resume attached, it goes in the reject pile.</p>

<p>&ldquo;How can you automatically disqualify people without even reading their names?&rdquo; you say? Well, in this job, the details matter. If you are the type of person that does not read that, you are not going to do <a href="https://tallwave.github.io/guidelines/Quality">well</a> by our clients, and that is just not gonna fly.</p>

<p>Those two steps will whittle down a pool of 200 applicants to 20 or so. I want to get that number down to below 10. The next steps are a little more involved. But before that, there are a couple of smaller things to consider.</p>

<p><strong>How much school stuff should I put include?</strong>. School kinda matters for an entry-level job. The school, your GPA, and if what you studied is related to the job are data points, but not deciding factors. Graduating summa cum laude from MIT is a nice feather in your cap, but it does not guarantee that you are a good software developer.</p>

<p>Nobody cares about your high school. Seriously. Don&rsquo;t put it on your resumé.</p>

<p><strong>Bits and bobs</strong>. Have up to date contact information on there. That includes easy URLs to any social media you feel like sharing. If I&rsquo;m interested, I&rsquo;ll try to look you up on LinkedIn. Sometimes it&rsquo;s easier to glean information there than a resumé.</p>

<p>Ok, more important stuff now.</p>

<p><strong>Step 3</strong>. More Hemingway, less Faulkner. I will not be spending more than a few minutes at this stage on your resume. I do not have the time to read your 5000 word treatise on how awesome you are. It is possible to convey your passion for the craft in a couple of paragraphs, I&rsquo;ve seen it.</p>

<p>Also, take 5 minutes and do a Google search on the company and position you&rsquo;re applying for. &ldquo;I saw that you recently did [some thing] and I love [key component of it]. I&rsquo;d like to talk about that!&rdquo; Flattery will get you everywhere, and this is the easiest way to get in the good graces of the person screening resumés.</p>

<p><strong>Step 4</strong>. Evaluate skills and job history. If I&rsquo;m hiring a web developer, can you, y&#8217;know, develop software for the web? When I&rsquo;m doing this I&rsquo;m looking for something that makes you stand out to me. Do your best to make this easy for me. &ldquo;I designed and built a load balanced RESTful API that scaled to 200,000 sessions&rdquo; is good. &ldquo;I took a junior dev under my wing and helped her get a promotion&rdquo; is great.</p>

<p>For a senior type position, I&rsquo;m only going to look about 5 years back on job history or so. The industry changes so quickly, it doesn&rsquo;t really matter that you were a <a href="http://backbonejs.org">Backbone.js</a> expert if we&rsquo;re jumping into <a href="http://vuejs.org">Vue</a>. You should still include it for history&rsquo;s sake, but it should be short.</p>

<p>For the juniors and entry-level folks, don&rsquo;t include non-relevant part-time jobs. It&rsquo;s cool that you worked at Chili&rsquo;s for 9 months, but putting noise like that on a resumé makes me grumpy. <strong>Note:</strong> If you worked crap jobs to put yourself through school and are proud of that, and you should be, put it in the cover letter.</p>

<p>If you are changing careers, definitely include that, and make it apparent. Last year I hired someone who got her PhD in physics and after 20 years of that decided to become a developer. She was clearly smart and has been a great addition to the team.</p>

<p>So, if you do all of that, you&rsquo;ll very likely make it to a phone screen interview. That&rsquo;s a whole other post though. But, what about bigger companies? The ones with giant HR departments that have other people phone screen?</p>

<p>In that scenario, your resumé will very likely be screened by a non-technical person. Someone who may not know that if you can build APIs with <a href="https://expressjs.com">Express</a>, you can do it with <a href="https://hapijs.com">Hapi</a>, and is looking for that magic buzzword and will reject you if it is not there. If you feel like you&rsquo;re applying to a company like that (and if they have more than a few hundred employees, you probably are), take special care that your resumé has all of the right bullet points and that they are obvious.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Red/Blue Game]]></title>
    <link href="http://blog.swilliams.me/words/2018/01/06/red-slash-blue-game/"/>
    <updated>2018-01-06T15:37:07-07:00</updated>
    <id>http://blog.swilliams.me/words/2018/01/06/red-slash-blue-game</id>
    <content type="html"><![CDATA[<p>My kids and I like to play with Nerf guns. My younger daughter in particular likes to sneak up behind people and shoot them in the back. <a href="https://youtu.be/3ebPsZl4k5k?t=13s">She&rsquo;s devious like that</a>. While running around and shooting each other can be fun, it does start to get a little boring after a while.</p>

<p>So, we started to implement rules and make more of a contest out of it. We started with a little capture-the-flag, but that was still a little dicey, certain members of the family would either really want a particular stuffed animal to be the flag, while others definitely didn&rsquo;t want that one to be the flag ever ever ever ever.</p>

<p>I was familiar with a simple game mechanic of capture points. Each team flips over a card-type thing to their color and they get points for that. The more capture points the better — it keeps everyone moving. If you get shot, you have to go back to your re-spawn point and start over. The catch was that keeping score was too tricky without some kind of impartial observer.</p>

<p>Being the coder that I am I whipped up something quickly for iOS and called it Red/Blue, for the two teams it had. It&rsquo;s a basic premise:</p>

<ul>
<li>When the app launches, choose how many minutes to play and tap Start.</li>
<li>The game starts and displays a split screen with two different colors.</li>
<li>When someone taps a color, ex. Red, a clock associated with Red starts to increment.</li>
<li>When Blue is tapped, Red is paused, and Blue increments. I added some sound effects to denote when this happens. (it&rsquo;s just my voice saying &ldquo;Red&rdquo; and &ldquo;Blue&rdquo;. My kids think this is hilarious.)</li>
<li>When the main clock counts down to 0, the game is over and whichever color got incremented the most wins.</li>
</ul>


<h3>Screenshots</h3>

<figure class="center">
    <img alt="Start Screen" class="halfsize border" src="https://github.com/swilliams/redblue/blob/master/readme-assets/redblue1.PNG?raw=true" />
    <figcaption>Start Screen</figcaption>
</figure>




<figure class="center">
    <img alt="Game Screen" class="halfsize border" src="https://github.com/swilliams/redblue/blob/master/readme-assets/redblue2.PNG?raw=true" />
    <figcaption>Game Screen</figcaption>
</figure>




<figure class="center">
    <img alt="End Screen" class="halfsize border" src="https://github.com/swilliams/redblue/blob/master/readme-assets/redblue3.PNG?raw=true" />
    <figcaption>End Screen</figcaption>
</figure>


<p>This worked pretty well. We ended up pulling out old iPhones and iPads and laying them on flat surfaces and threatening all kinds of trouble if one of the kids moved or picked up a device. Ultimately we had four control points which led to all kinds of mayhem.</p>

<p>One thing we noticed was that it was annoying to start a round with the four control points we usually played with. Everyone would have to be by a device to manually start off each timer. A quick googling revealed that <a href="https://www.ralfebert.de/tutorials/ios-swift-multipeer-connectivity/">Multipeer Connectivity is pretty easy to pull off</a>. Another hour of coding and now all of the devices will start off when the first device hits start.</p>

<p>I do not plan to submit this to the app store. I just don&rsquo;t want to have to deal with it. The code is under an MIT license, so that you can do whatever you&rsquo;d like with it.</p>

<p><strong>To install</strong></p>

<ul>
<li>You&rsquo;ll need <a href="https://developer.apple.com/xcode/">Xcode</a> and an iOS device running iOS 10 or higher.</li>
<li><a href="https://github.com/swilliams/redblue">Clone or download the code from GitHub</a>.</li>
<li>Open the <code>RedBlue.xcodeproj</code> file in Xcode.</li>
<li>You may need to adjust the Signing stuff to get it to run on your own devices.</li>
<li>Connect your device to your Mac.</li>
<li>From the Product menu, select Run.</li>
<li>Xcode will build the app and then install it on your device.</li>
</ul>


<p><strong>Details</strong></p>

<ul>
<li>There are no tests. I should probably fix that. We&rsquo;ll see.</li>
<li>Once a round starts there&rsquo;s no way to end it prematurely other than force-quitting the app. I don&rsquo;t think that&rsquo;s a big deal.</li>
<li>The code could stand to be refactored a bit. I only spent a few hours on it so it&rsquo;s a little haphazard. <a href="https://www.urbandictionary.com/define.php?term=patches%20are%20welcome">Patches are welcome</a> ;).</li>
</ul>


<h3>In the future!</h3>

<p>I may add other gameplay modes. Some sort of King of the Hill mode may be interesting, or chained control points (point 2 isn&rsquo;t enabled until point 1 is captured), or any number of other things, but I don&rsquo;t know if I&rsquo;ll ever get to that.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dreamers and Doers]]></title>
    <link href="http://blog.swilliams.me/words/2018/01/05/dreamers-and-doers/"/>
    <updated>2018-01-05T20:33:14-07:00</updated>
    <id>http://blog.swilliams.me/words/2018/01/05/dreamers-and-doers</id>
    <content type="html"><![CDATA[<p>Let me tell you about &ldquo;Jake&rdquo;. Jake was a colleague of mine and he <em>loved</em> to watch TED talks. If you had lunch with him, you were guaranteed to have a stimulating discussion of the blockchain, or AI, or AR &amp; VR, or some other topic. You&rsquo;d walk away from it with ideas blasting out of your brain. He had that much sincere passion about all the things that others may have passed over as fads.</p>

<p>Jake and I used to to get into it because I tended to be more focused on the present and tended to get annoyed with some of the &ldquo;everything will be better in the future because of [insert-hot-technology]&rdquo; talk. I do believe that change doesn’t happen through technology alone, but tech can facilitate faster and easier change. Facebook didn’t change the world because it had a neat timeline algorithm but it sure did make it easier for millions of people to bump into each other, for better or for worse.</p>

<p>Everybody needs to dream a little. The yearning for something new and better is powerful, and can cause all sorts of ideas to hatch. But there is such a thing as too much dreaming. It’s easy to fall in love with tech. It can be <strong>fun</strong> to imagine what it’ll be like when your house responds intelligently to a wave of your hand. But imagining never brought about anything if work didn’t go with it.</p>

<p>On occasion I&rsquo;ve been called too pragmatic. I tend to focus on honest to goodness tangible products. I get all kinds of itchy when I hear that someone is an &ldquo;enthusiast&rdquo; or &ldquo;thought leader&rdquo; on something like cryptocurrencies. Usually they have both of those titles on their LinkedIn profiles. Because there seems to be a lot of <a href="https://en.wiktionary.org/wiki/all_hat_and_no_cattle">hat and no cattle</a> surrounding those hot topics, I tend to roll my eyes a bit and go back to focusing on what&rsquo;s in front of me.</p>

<p>This means I have a tendency to be a little behind the curve when something new comes along that I would actually benefit. I&rsquo;m more of a &ldquo;doer&rdquo; than a &ldquo;dreamer&rdquo;. But, then I have to play catch-up. I hate playing catch-up. This isn&rsquo;t scientific but it feels like there is a spectrum here. Some people have their heads totally in the clouds and never get anything done. Some are so focused on the work that they are constantly missing the next big thing.</p>

<p>The ones who are really dangerous are those who have equal parts dreamer and equal parts doer. One of Alan Kay&rsquo;s maxims at Xerox PARC was <a href="https://en.wikiquote.org/wiki/Alan_Kay">“The best way to predict the future is to invent it.”</a> Those who can see the trends and how to build businesses and products around them are in the best position to truly bring about change.</p>

<p>I do think that it is possible to move along that spectrum to an extent. In my job, I’ve been working on dreaming a little more. I should be taking a closer look at some of the things I’ve dismissed because while they may be a little far away from reality right now, they may not be in a year or two, and I don’t want to be on my heels if there’s a big enough shift in the market. I love building cool stuff and goshdarnit, if the blockchain really, truly becomes A Thing, then I want to be there for it.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Race Report — Phoenix Rock 'n Roll Half Marathon]]></title>
    <link href="http://blog.swilliams.me/words/2017/01/28/race-report-phoenix-rock-n-roll-half-marathon%1B/"/>
    <updated>2017-01-28T15:40:57-07:00</updated>
    <id>http://blog.swilliams.me/words/2017/01/28/race-report-phoenix-rock-n-roll-half-marathon</id>
    <content type="html"><![CDATA[<p>I tend to function better when I have specific goals. As part of improving my overall health I started to take up running back in mid 2015, and got a little more serious in the early parts of 2016. In a fit of pique I decided to sign up to run the 2017 Rock and Roll Marathon in Phoenix. I&rsquo;d never come close to running 13 miles before, so the prospect scared me a little bit.</p>

<p><strong>Training</strong></p>

<p>So, I started to actually train, even though it was months and months away. I stumbled upon Hal Higdon&rsquo;s training programs, liked what I saw and started to do a mix of the <a href="http://www.halhigdon.com/training/51131/Half-Marathon-Novice-1-Training-Program">Novice 1</a> and <a href="http://www.halhigdon.com/training/51312/Half-Marathon-Novice-2-Training-Program">2</a> programs.</p>

<p>I was averaging about 15 miles per week running before summer hit. Then temperatures were averaging mid 90&rsquo;s even at 5am. It wasn&rsquo;t even a particularly dry heat this go around with the occasional 50% humidity. My mileage tapered off to below 10 per week, but the race was in January, so I knew I could pick it back up again.</p>

<p>As fall wore on temperatures finally dipped back down below furnace levels and I started going on longer runs. I was ahead of the training schedule and decided to give the full 13.1 miles a shot on December 17, and got a time of 2:18:19. Not bad. I originally had goals of running it under 2 hours, but I realized that I was just not that fast, and was ok with it.</p>

<p>One other big training run was on the <a href="https://hikearizona.com/decoder.php?ZTN=737">Charles M. Christiansen trail</a>, a 10.7 hiking trail with some relatively steep spots. A couple spots on the trail weren&rsquo;t very well marked, so it ended up being 11.5 miles&hellip; I don&rsquo;t do a ton of trail running, so that was a fun little experience.</p>

<p><strong>The Race</strong></p>

<p>Eventually January 15, 2017 rolled around. The morning of, I wasn&rsquo;t sure what to have for breakfast. I usually eat some mix of breakfast sausage and eggs for protein, but it didn&rsquo;t feel like the right choice to have that grease rolling around in my stomach. I ended up going to my <a href="http://www.chompies.com/bakery-and-bagels">favorite bagel shop</a> and getting a bagel, cream cheese, and lox. It was delicious.</p>

<p>In Tempe, I found some parking<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>, stood in line for 20 minutes to use the bathroom, and made it to my corral as the first starters got going. When I registered, I&rsquo;d estimated my finishing time to be 2:20, which placed me right in the middle of the pack.</p>

<p>Eventually we were off! I knew pacing was important and tried to keep a stable one despite the nerves and all the people. I found myself passing a lot of other racers at the start. I checked my watch a few times and my heart rate was fine, so I kept it up.</p>

<p>My goal going in was to be a little faster than my December run. I was aiming for 2:15. A few miles in I saw a the 2:15 pacer. She was easy to spot because she was holding a tall sign with &ldquo;2:15&rdquo; on it. My pace put me ahead of her and I found myself passing more people.</p>

<p>I was feeling good and enjoying the weather. Rain had been predicted, but never materialized, for which I was grateful. Temperature was about 50 degrees with 70% humidity. I was sweating a bit, but not too badly. I started to keep an eye open for the 2:10 pacer.</p>

<p>I kept up my pace and was still passing people and eventually hit the halfway mark. I had been listening to a podcast and decided to switch it over to my running playlist. <a href="https://raceroster.com/events/2017/10542/the-wicked-marathonhalf-marathon4-mile-and-the-spooky-kids-sprint">Let it Out</a> by Switchfoot kicked in and I felt energized. My pace crept up a bit, but I was still feeling pretty good.</p>

<p>The race had water and/or gatorade stations every mile or so I didn&rsquo;t bring an additional bottle. Grabbing a cup of water while jogging and drinking it is tricky, but I got it to work.</p>

<p>The course also had a number of portapotties on the course, should you need that. I tend to hyrdate a lot and need to pee on long runs. The portapotties all had decently sized lines at the first few miles, and thinned out in the latter ones. Around mile 8 I decided to use one, thinking it was available. But, it was locked and in use. I jogged around a bit not wanting to get cold. It felt like hours were ticking by while I waited. In reality it was probably only 30 seconds, but I grew impatient and got back in the race.</p>

<p>Food is also a factor for my long runs. I usually bring a granola bar with me and eat it piece by piece after 8 miles. It&rsquo;s a good 240 calorie boost after burning 800. I had one in my pocket, but never even reached for it. I&rsquo;ve always believed that bagels have magical powers and this proved it because I wasn&rsquo;t even a bit hungry at all during the whole race.</p>

<p>At mile 9 was The Hill. I&rsquo;d heard about it from people who had run the course in the past and how hard The Hill was. I got to it and saw that a lot of people were slowing down. By a lot.</p>

<p>The Hill was not that steep. Come on people.</p>

<p>Total elevation change on the race is 155ish feet, with this hill making up a big part of it, which is practially nothing. My training on the long trail was significantly harder to run. I kept my pace a cruised up, again passing a lot of people. The &lsquo;fun&rsquo; part of the course is that you turn around just past the top of the hill and go right back down. At the top there was a pretty awesome drum and percussion band going to town. That plus a little downhill were when I started to go faster. I passed quite a few people going down. Had it been longer or steeper I would&rsquo;ve had to slow down, but my quads were doing well and the footing was fine.</p>

<p>I did start to get a little tired in mile 11. I was ready to be done with the race by that point. I think the humidity was sapping me by then. I grabbed a cup of water and downed it and kept moving.</p>

<p>This whole time I never saw the 2:10 pacer. I was a little bummed that I couldn&rsquo;t even see him/her, but assumed they were just around the next corner and I wasn&rsquo;t that far behind.</p>

<p>Mile 12 hit and I was re-energized again. One more mile to go! I checked my watch and it was right around 1:53. Holy crap. Under 2 hours was still out, but I realized I could blow past that goal of 2:15. The 2:10 pacer must&rsquo;ve not been holding a sign or I just missed it. I turned up the juice and ran hard.</p>

<p>The last half mile is over a bridge and I was passing people left and right. I wanted start shouting &ldquo;It&rsquo;s almost over, why aren&rsquo;t you running?&rdquo; but didn&rsquo;t. I got around the last corner and saw my wife, kids, and mother cheering me on, which was great. I jumped on the last timing mat and started to make my way through the mass of finishers. The funny thing about the finishing area was that it was filled with all the sponsors handing out chocolate milk, sports drinks, bananas, etc. If I ate/drank all the stuff there I would&rsquo;ve easily thrown up.</p>

<p>I found out later that that my official time was 2:02:57, which was far faster than I was expecting to run.</p>

<p><strong>After/Next</strong></p>

<p>I wasn&rsquo;t particularly tired or sore after the race. However, the stiffness and soreness did set after sitting in the car for the 30 minute drive home. It wasn&rsquo;t too bad though.</p>

<p>Knowing myself, sometimes when I hit a goal I fall back into bad habits. I don&rsquo;t want that to happen this time. So, <a href="https://raceroster.com/events/2017/10542/the-wicked-marathonhalf-marathon4-mile-and-the-spooky-kids-sprint">I signed up to run a <em>full</em> marathon in October</a>. 26 miles to run seems insane, but I&rsquo;ll be sure to train properly and see how it goes.</p>

<div class="footnotes">
  <ol>
    <li class="footnote" id="fn:1">
  <p>Thousands of people were there so finding parking took some doing.</p>
</li>
  </ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Google OAuth, Ember, Hapi]]></title>
    <link href="http://blog.swilliams.me/words/2016/09/07/google-oauth-ember-hapi/"/>
    <updated>2016-09-07T08:10:50-07:00</updated>
    <id>http://blog.swilliams.me/words/2016/09/07/google-oauth-ember-hapi</id>
    <content type="html"><![CDATA[<p>OAuth is, to borrow a phrase, a bag of hurt. Not just any bag, but the kind that is thrown over your head right before you&rsquo;re thrown into a van and driven down to Tijuana and ransomed for $50,000. I don&rsquo;t like OAuth.</p>

<p>Sometimes, though you need to use it. I&rsquo;m working on an internal tool at <a href="http://tallwave.com">work</a> and want to make sure that only co-workers can use it. I could do the username/password thing, but the world has enough of those. We use Google docs for the office, so everyone has a Google account that could, theoretically, be used to sign in. Thus, OAuth.</p>

<p>The tool itself is a web app that uses <a href="http://emberjs.com/">Ember</a> on the front-end and <a href="http://hapijs.com/">Hapi</a> and <a href="https://www.mongodb.com/">MongoDB</a> as the API and database. It&rsquo;s my first time using Hapi, and I like it quite a bit, seems like a really good tool for API building.</p>

<p>Since this is a completely separate client and server, it adds a bit of a wrinkle to the OAuth dance. There are plenty of &ldquo;Sign in with X&rdquo; libraries out there, but they mostly seem to be written with the intent that the user will only be interacting with that service. In other words, if I was building a Google Docs client app, my life would be easier, but no, I am only authenticating a user&rsquo;s account and then treating that as the key to my own system&hellip; which makes it more manual. It also doesn&rsquo;t help that Google&rsquo;s OAuth documentation is lousy. There are many different ways to authenticate, and <a href="https://github.com/google/google-auth-library-nodejs">multiple</a> <a href="https://github.com/google/google-api-nodejs-client">libraries</a> to support the different ways, and they&rsquo;ve changed over time, so searching for help is difficult.</p>

<p>Here&rsquo;s how it&rsquo;s supposed to work:</p>

<ol>
<li>The client (Ember) &ldquo;signs in with Google&rdquo;. If this is successful it receives an <code>authorizationCode</code>. This code by itself is useless, it just means the user signed in ok.</li>
<li>The server (Hapi) needs to validate this code and turn it into an <code>accessToken</code>.</li>
<li>If <em>that</em> is successful, we can query the Google API (from the server still) for the account information, verify that they are from Tallwave, and then send credentials back down to the client.</li>
<li>The client receives the credentials, stores them locally, and includes them for subsequent API requests.</li>
</ol>


<p>Errors need to be handled at all the steps along the way too.</p>

<p><strong>Step 1 — Client Side</strong></p>

<p><a href="https://github.com/Vestorly/torii">Torii</a> is a pretty good (though a wee bit out of date) library for Ember that handles a good amount of the Google sign in process. Follow its installation instructions and setup the configuration and the proper adapter. Here&rsquo;s my <code>environment.js</code> entry:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="cm">/* The following properties are in ENV */</span>
</span><span class='line'><span class="nx">torii</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">sessionServiceName</span><span class="o">:</span> <span class="s1">&#39;session&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">providers</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s1">&#39;google-oauth2&#39;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">redirectUri</span><span class="o">:</span> <span class="nx">signinURL</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">apiKey</span><span class="o">:</span> <span class="nx">googleOAuthAPIKey</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">scope</span><span class="o">:</span> <span class="s1">&#39;profile email&#39;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>The <a href="https://developers.google.com/+/web/api/rest/oauth#authorization-scopes"><code>scope</code></a> property is important. That allows you to query for the user&rsquo;s account later on. The only other point with Torii worth mentioning is how I sent the authorization code to my API. The <code>open</code> method on the <code>torii-adapters/application.js</code> is called after Google auth finishes, and that is where you create the &ldquo;session&rdquo; for authentication.</p>

<p>By default Ember uses the JSON API for the API layer, and I tend to go with the flow. But in this case, since we&rsquo;re sending a single value to the server and will throw it away immediately after&hellip; Setting up a model seems overkill for that. We can drop down to regular old jQuery for this.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// This is in torii-adapters/application.js</span>
</span><span class='line'><span class="nx">open</span><span class="p">(</span><span class="nx">authentication</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="k">new</span> <span class="nx">Ember</span><span class="p">.</span><span class="nx">RSVP</span><span class="p">.</span><span class="nx">Promise</span><span class="p">((</span><span class="nx">resolve</span><span class="p">,</span> <span class="nx">reject</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">Ember</span><span class="p">.</span><span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span><span class="p">({</span>
</span><span class='line'>      <span class="nx">method</span><span class="o">:</span> <span class="s1">&#39;POST&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">data</span><span class="o">:</span> <span class="p">{</span> <span class="nx">authorizationCode</span><span class="o">:</span> <span class="nx">authentication</span><span class="p">.</span><span class="nx">authorizationCode</span> <span class="p">},</span>
</span><span class='line'>      <span class="nx">url</span><span class="o">:</span> <span class="s1">&#39;&#39;</span><span class="p">,</span> <span class="c1">// this is the authentication URL in your API</span>
</span><span class='line'>      <span class="nx">success</span><span class="o">:</span> <span class="nx">Ember</span><span class="p">.</span><span class="nx">run</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span> <span class="nx">resolve</span><span class="p">),</span> <span class="c1">// forward success/error to the Promise</span>
</span><span class='line'>      <span class="nx">error</span><span class="o">:</span> <span class="nx">Ember</span><span class="p">.</span><span class="nx">run</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span> <span class="nx">reject</span><span class="p">)</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>  <span class="p">}).</span><span class="nx">then</span><span class="p">((</span><span class="nx">account</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;sessionStore&#39;</span><span class="p">).</span><span class="nx">save</span><span class="p">(</span><span class="nx">account</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">{</span> <span class="nx">currentUser</span><span class="o">:</span> <span class="nx">account</span> <span class="p">};</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Worth pointing out is that we are expecting our API to return some JSON that will be:</p>

<ol>
<li>Stored locally (<code>sessionStore</code> is a <a href="https://guides.emberjs.com/v2.7.0/applications/services/">service</a>, which we&rsquo;ll define later), and will be retrieved later.</li>
<li>Returning the <code>currentUser</code> object will merge it into the underlying session, so that it can be retrieved in routes, components, templates etc. This isn&rsquo;t permanent storage though, if the user refreshes the page, it&rsquo;ll be gone, hence <code>sessionStore</code>.</li>
</ol>


<p><strong>Step 2 — On the Server</strong></p>

<p>This is where the fun begins. If you&rsquo;re playing at home, I used Node 5 and Hapi 13.x.x. First, you&rsquo;ll need to get your credentials from the <a href="https://console.developers.google.com">Google Developer Console</a>. I&rsquo;m not going to walk through those steps, but you&rsquo;ll need an OAuth client ID for a Web Application. Specifically, you&rsquo;ll need the client id, client secret, and redirect URL (yes, even though you won&rsquo;t be redirecting to anything at this point).</p>

<p>Then, install the <code>googleapis</code> dependency.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">npm</span> <span class="nx">install</span> <span class="nx">googleapis</span> <span class="o">--</span><span class="nx">save</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now, let&rsquo;s build a service that sends Google an <code>authorizationCode</code> and gets an accessToken back. You&rsquo;ll call this service from your route handler.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kr">const</span> <span class="nx">Google</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;googleapis&#39;</span><span class="p">);</span>
</span><span class='line'><span class="kr">const</span> <span class="nx">OAuth2</span> <span class="o">=</span> <span class="nx">Google</span><span class="p">.</span><span class="nx">auth</span><span class="p">.</span><span class="nx">OAuth2</span><span class="p">;</span>
</span><span class='line'><span class="kr">const</span> <span class="nx">profile</span> <span class="o">=</span> <span class="nx">Google</span><span class="p">.</span><span class="nx">oauth2</span><span class="p">(</span><span class="s1">&#39;v2&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// pull these from an ENV variable or something else</span>
</span><span class='line'><span class="kr">const</span> <span class="nx">oauthClient</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">OAuth2</span><span class="p">(</span><span class="nx">CLIENT_ID</span><span class="p">,</span> <span class="nx">CLIENT_SECRET</span><span class="p">,</span> <span class="nx">REDIRECT_URL</span><span class="p">);</span>
</span><span class='line'><span class="c1">// Omitting the REDIRECT_URL will throw an error</span>
</span><span class='line'>
</span><span class='line'><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// callback is a function whose signature is (error, tokens)</span>
</span><span class='line'>  <span class="nx">getTokens</span><span class="p">(</span><span class="nx">authorizationCode</span><span class="p">,</span> <span class="nx">callback</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">oauthClient</span><span class="p">.</span><span class="nx">getToken</span><span class="p">(</span><span class="nx">authorizationCode</span><span class="p">,</span> <span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="nx">tokens</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="p">{</span> <span class="c1">// the authorization code was bad</span>
</span><span class='line'>        <span class="nx">callback</span><span class="p">(</span><span class="nx">err</span><span class="p">);</span>
</span><span class='line'>        <span class="k">return</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="c1">// At this point, we have an access token.</span>
</span><span class='line'>      <span class="nx">oauthClient</span><span class="p">.</span><span class="nx">credentials</span> <span class="o">=</span> <span class="nx">tokens</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">// Each Google API method takes a params object, </span>
</span><span class='line'>      <span class="c1">// which is where you provide your auth credentials</span>
</span><span class='line'>      <span class="kr">const</span> <span class="nx">params</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">auth</span><span class="o">:</span> <span class="nx">oauthClient</span>
</span><span class='line'>      <span class="p">};</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">// Retrieve the user&#39;s account</span>
</span><span class='line'>      <span class="nx">profile</span><span class="p">.</span><span class="nx">userinfo</span><span class="p">.</span><span class="nx">v2</span><span class="p">.</span><span class="nx">me</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">params</span><span class="p">,</span> <span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="nx">response</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">callback</span><span class="p">(</span><span class="nx">err</span><span class="p">);</span>
</span><span class='line'>          <span class="k">return</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="c1">// The response object contains all of the account info</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// This is where you validate if the user is allowed or not.</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// If the user is valid, create a new session for them and save it.</span>
</span><span class='line'>        <span class="c1">// It&#39;s up to you where you want to save this session. Could be </span>
</span><span class='line'>        <span class="c1">// a redis cache, http session, whatever your needs are.</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// After that, we&#39;re going to send our session token and user </span>
</span><span class='line'>        <span class="c1">// account back.</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>        <span class="kr">const</span> <span class="nx">sessionJSON</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">token</span><span class="o">:</span> <span class="nx">someSessionToken</span><span class="p">,</span>
</span><span class='line'>          <span class="nx">account</span><span class="o">:</span> <span class="nx">response</span>
</span><span class='line'>        <span class="p">};</span>
</span><span class='line'>        <span class="nx">callback</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span> <span class="nx">newSession</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>


<p>That&rsquo;s kind of a mouthful and could definitely stand a good refactoring, but it goes through the steps needed to get some information from Google. You can see more <a href="http://google.github.io/google-api-nodejs-client/12.4.0/index.html">APIs</a> you can call, but the documentation on a lot of them is rather sparse. For example, adding the <code>oauthClient</code> to <code>params</code> is not apparent, but necessary for each call.</p>

<p>We&rsquo;ve now determined if the user should actually have access to what they just signed in to and sent the response back to the client. That&rsquo;s pretty good! Refresh your beverage, take a deep breath and then let&rsquo;s get handle that response and get our client in order to keep moving.</p>

<p><strong>Step 3 — Back on the Client</strong></p>

<p>You might have noticed again that we did not send the session information back in JSON API format either. This was intentional since we aren&rsquo;t going to be storing this in the standard Ember store, and therefore don&rsquo;t need the additional benefit of using something that standardized. You could if you wanted to, but for this occasion, I did not want to set up a model (or in this case model<em>s</em> to support the nested structure).</p>

<p>Back up in our <code>Ember.RSVP.Promise</code> handler there was this line:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// In torii-adapters/application.js</span>
</span><span class='line'><span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;sessionStore&#39;</span><span class="p">).</span><span class="nx">save</span><span class="p">(</span><span class="nx">account</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>Once you receive a response, you&rsquo;ll need to store it. You could use Ember Data, but that felt overkill to me; I needed to access the tokens within the response for subsequent API calls, and nothing else. I ended up building an <a href="https://guides.emberjs.com/v2.8.0/applications/services/">Ember service</a> that serialized the content and stored it in <a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage">localStorage</a>. You can go your own way too.</p>

<p><strong>Step 4 — Making authenticated requests</strong></p>

<p>We&rsquo;re authorized (or have displayed a fancy error message) and are ready to make actual requests to get actual data. I like to authenticate my API requests by including my authorization token in the <code>Authorization</code> header on requests. Ember allows for this by overriding the <code>headers</code> computed property in your Adapter:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// adapters/application.js</span>
</span><span class='line'>  <span class="nx">headers</span><span class="o">:</span> <span class="nx">Ember</span><span class="p">.</span><span class="nx">computed</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="kr">const</span> <span class="nx">account</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;sessionStore&#39;</span><span class="p">).</span><span class="nx">fetch</span><span class="p">();</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nx">account</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="p">{</span>
</span><span class='line'>        <span class="s1">&#39;Authorization&#39;</span><span class="o">:</span> <span class="nx">account</span><span class="p">.</span><span class="nx">_id</span>
</span><span class='line'>      <span class="p">};</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">{};</span>
</span><span class='line'>  <span class="p">}).</span><span class="kr">volatile</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Step 5 — Verify authentication on the server</strong></p>

<p>There are may ways to <a href="http://hapijs.com/tutorials/auth">authenticate requests with Hapi</a>. Hapi calls these &ldquo;Schemes&rdquo;. A Scheme is made up of multiple Strategies but since we only have one, we&rsquo;ll just refer to it as a Scheme.</p>

<p>You define a Scheme as a function that takes a <code>server</code> and some <code>options</code> as arguments and go from there. Here&rsquo;s <code>api-auth.js</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">server</span><span class="p">,</span> <span class="nx">options</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// These are the standard Hapi request/reply arguments</span>
</span><span class='line'>    <span class="nx">authenticate</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">request</span><span class="p">,</span> <span class="nx">reply</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">// Get the session token from the HTTP Headers of the request</span>
</span><span class='line'>      <span class="kr">const</span> <span class="nx">req</span> <span class="o">=</span> <span class="nx">request</span><span class="p">.</span><span class="nx">raw</span><span class="p">.</span><span class="nx">req</span><span class="p">;</span>
</span><span class='line'>      <span class="kr">const</span> <span class="nx">authorization</span> <span class="o">=</span> <span class="nx">req</span><span class="p">.</span><span class="nx">headers</span><span class="p">.</span><span class="nx">authorization</span><span class="p">;</span>
</span><span class='line'>      <span class="c1">// Fail quickly if it isn&#39;t present.</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">authorization</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="nx">reply</span><span class="p">(</span><span class="nx">Boom</span><span class="p">.</span><span class="nx">unauthorized</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span> <span class="s1">&#39;Basic&#39;</span><span class="p">));</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">// Pull the credentials from the session store that are </span>
</span><span class='line'>      <span class="c1">// associated with the session token. Fail if it&#39;s not valid.</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">tokenIsValid</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="nx">reply</span><span class="p">(</span><span class="nx">Boom</span><span class="p">.</span><span class="nx">unauthorized</span><span class="p">(</span><span class="s1">&#39;Authenication failed&#39;</span><span class="p">,</span> <span class="s1">&#39;Basic&#39;</span><span class="p">),</span> <span class="kc">null</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">// Authenticated, so send the credentials along the chain in </span>
</span><span class='line'>      <span class="c1">// case they need to be used later.</span>
</span><span class='line'>      <span class="k">return</span> <span class="nx">reply</span><span class="p">.</span><span class="k">continue</span><span class="p">({</span> <span class="nx">credentials</span><span class="o">:</span> <span class="nx">credentials</span> <span class="p">});</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">};</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now that we&rsquo;ve defined our Scheme, we need to register it with Hapi. Wherever the server is set up add this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// Import our Scheme</span>
</span><span class='line'><span class="kr">const</span> <span class="nx">apiScheme</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;./config/api-scheme&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="nx">exports</span><span class="p">.</span><span class="nx">register</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">server</span><span class="p">,</span> <span class="nx">options</span><span class="p">,</span> <span class="nx">next</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// Auth</span>
</span><span class='line'>  <span class="c1">// Schemes have a name which you define here.</span>
</span><span class='line'>  <span class="nx">server</span><span class="p">.</span><span class="nx">auth</span><span class="p">.</span><span class="nx">scheme</span><span class="p">(</span><span class="s1">&#39;auth-scheme&#39;</span><span class="p">,</span> <span class="nx">apiScheme</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// Strategies also have a name. This is what you&#39;ll refer </span>
</span><span class='line'>  <span class="c1">// to when setting schemes for routes.</span>
</span><span class='line'>  <span class="nx">server</span><span class="p">.</span><span class="nx">auth</span><span class="p">.</span><span class="nx">strategy</span><span class="p">(</span><span class="s1">&#39;basic-strategy&#39;</span><span class="p">,</span> <span class="s1">&#39;auth-scheme&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// You can declare all routes to use a one Strategy by default.</span>
</span><span class='line'>  <span class="nx">server</span><span class="p">.</span><span class="nx">auth</span><span class="p">.</span><span class="k">default</span><span class="p">(</span><span class="s1">&#39;basic-strategy&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// Routes might go here</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>


<p>If you do use a default auth strategy, you can override that on individual routes in their handler config:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="nx">method</span><span class="o">:</span> <span class="s1">&#39;GET&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">path</span><span class="o">:</span> <span class="s1">&#39;/&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">handler</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">reply</span><span class="p">)</span> <span class="p">{</span> <span class="nx">reply</span><span class="p">();</span> <span class="p">},</span>
</span><span class='line'>  <span class="nx">config</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">auth</span><span class="o">:</span> <span class="s1">&#39;another-strategy&#39;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Or use the boolean <code>false</code> to skip auth altogether for a route, such as your session creation API.</p>

<p>And we&rsquo;re done! You now have an authenticated API. There are plenty of other points that could be expanded on, but it&rsquo;s getting a little long in the tooth now.</p>

<p><strong>Wait, why not use Bell?</strong></p>

<p>The Hapi organization maintains a project called <a href="https://github.com/hapijs/bell">Bell</a> that is a &ldquo;Third-party login plugin for hapi&rdquo;, including OAuth services. It&rsquo;s great, but the catch is that since half of our authentication takes place in the browser, we can&rsquo;t quite use it the way it is intended to be used.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Maine and Back Again]]></title>
    <link href="http://blog.swilliams.me/words/2016/07/25/maine-and-back-again/"/>
    <updated>2016-07-25T08:47:36-07:00</updated>
    <id>http://blog.swilliams.me/words/2016/07/25/maine-and-back-again</id>
    <content type="html"><![CDATA[<p>&ldquo;We&rsquo;re going to Maine.&rdquo;</p>

<p>&ldquo;Oh&hellip; do you have family or friends out there?&rdquo;</p>

<p>That&rsquo;s usually how the conversation went when I informed people of The Williams Family 2016 Vacation plans. It was kind of weird. I mean Maine&rsquo;s not exactly the hotspot for getaways. There are a bunch of more tropical places. Hawaii, Florida, The Caribbean, Idaho. What&rsquo;re you gonna do in Maine? Visit Stephen King?</p>

<p>Well, here&rsquo;s what we did.</p>

<h1>Beach time</h1>

<p>We rented a place for the week in Old Orchard Beach. It was a nice little beach condo about 100 feet from the ocean. You wouldn&rsquo;t normally think of Maine as being a beach destination, but it was better than a lot of quite of few of the beaches in southern California I&rsquo;ve been to. Not too rocky, no giant riptide, water was warm enough (mostly). The waves weren&rsquo;t quite as nice, but fine enough to swim through and throw small children into.</p>

<figure class="center">
    <a href="http://swilliams.me/static/photos/maine/beach0-full.jpg"><img alt="Beach" src="http://swilliams.me/static/photos/maine/beach0.jpg"></a>
    <figcaption>The path to the beach</figcaption>
</figure>




<figure class="center">
    <a href="http://swilliams.me/static/photos/maine/beach1-full.jpg"><img alt="Beach" src="http://swilliams.me/static/photos/maine/beach1.jpg"></a>
    <figcaption>Partly cloudy</figcaption>
</figure>




<figure class="center">
    <a href="http://swilliams.me/static/photos/maine/beach2-full.jpg"><img alt="Beach" src="http://swilliams.me/static/photos/maine/beach2.jpg"></a>
    <figcaption>The girls getting in the Atlantic</figcaption>
</figure>




<figure class="center">
    <a href="http://swilliams.me/static/photos/maine/beach3-full.jpg"><img alt="Beach" src="http://swilliams.me/static/photos/maine/beach3.jpg"></a>
    <figcaption>Catching waves</figcaption>
</figure>




<figure class="center">
    <a href="http://swilliams.me/static/photos/maine/beach5-full.jpg"><img alt="Beach" src="http://swilliams.me/static/photos/maine/beach5.jpg"></a>
    <figcaption>At night</figcaption>
</figure>




<figure class="center">
    <a href="http://swilliams.me/static/photos/maine/beach4-full.jpg"><img alt="Beach" src="http://swilliams.me/static/photos/maine/beach4.jpg"></a>
    <figcaption>From the pier</figcaption>
</figure>




<figure class="center">
    <a href="http://swilliams.me/static/photos/maine/beach6-full.jpg"><img alt="Beach" src="http://swilliams.me/static/photos/maine/beach6.jpg"></a>
    <figcaption>Sometimes the moon looks like the sun</figcaption>
</figure>


<h1>Weather</h1>

<p>The temperature was usually in the low 80&rsquo;s during the day. The last day was warm, topping 90, which apparently didn&rsquo;t happen at all last year. Other than that, it was great. It rained a few of the days, but that was a nice change of pace.</p>

<figure class="center">
    <a href="http://swilliams.me/static/photos/maine/weather1-full.jpg"><img alt="Beach" src="http://swilliams.me/static/photos/maine/weather1.jpg"></a>
    <figcaption>Storm clouds</figcaption>
</figure>




<figure class="center">
    <a href="http://swilliams.me/static/photos/maine/weather2-full.jpg"><img alt="Beach" src="http://swilliams.me/static/photos/maine/weather2.jpg"></a>
    <figcaption>Fog. I haven&#8217;t played Silent Hill, but this can&#8217;t be good right?</figcaption>
</figure>




<figure class="center">
    <a href="http://swilliams.me/static/photos/maine/weather3-full.jpg"><img alt="Beach" src="http://swilliams.me/static/photos/maine/weather3.jpg"></a>
    <figcaption>Temperate</figcaption>
</figure>




<figure class="center">
    <a href="http://swilliams.me/static/photos/maine/weather4-full.jpg"><img alt="Beach" src="http://swilliams.me/static/photos/maine/weather4.jpg"></a>
    <figcaption>Bliss</figcaption>
</figure>


<h1>Food</h1>

<p>I&rsquo;m on record as loving seafood. If it lives in the ocean I&rsquo;ll probably like eating it, and lots of things swim in the ocean near Maine. We had lobster, lobster rolls, lobster mac &lsquo;n cheese, crab rolls, crab cakes, and shrimp. Most of it was ridiculously cheap. The best places were little dive type places that smelled of delicious fish. I didn&rsquo;t take too many pictures because I&rsquo;m not the biggest fan of taking pictures of food. Perhaps my favorite was a lunch that consisted of two full lobsters, a lobster roll, and a shrimp cocktail. All of that was under $40, which is usually the price for a single lobster at a fancy restaurant out here. Not bad.</p>

<h1>Nature</h1>

<p>Maine&rsquo;s one of the most beautiful places on Earth. The beaches are just a few miles from some amazing forests. I could gush, but I&rsquo;ll let the pictures sell it some more.</p>

<figure class="center">
    <a href="http://swilliams.me/static/photos/maine/nature1-full.jpg"><img alt="Beach" src="http://swilliams.me/static/photos/maine/nature1.jpg"></a>
    <figcaption>Flowers by the bay</figcaption>
</figure>




<figure class="center">
    <a href="http://swilliams.me/static/photos/maine/nature2-full.jpg"><img alt="Beach" src="http://swilliams.me/static/photos/maine/nature2.jpg"></a>
    <figcaption>House at the end of the lane</figcaption>
</figure>




<figure class="center">
    <a href="http://swilliams.me/static/photos/maine/nature3-full.jpg"><img alt="Beach" src="http://swilliams.me/static/photos/maine/nature3.jpg"></a>
    <figcaption>Gateway</figcaption>
</figure>


<figure class="center">
    <a href="http://swilliams.me/static/photos/maine/nature4-full.jpg"><img alt="Beach" src="http://swilliams.me/static/photos/maine/nature4.jpg"></a>
    <figcaption>Forest</figcaption>
</figure>




<figure class="center">
    <a href="http://swilliams.me/static/photos/maine/nature5-full.jpg"><img alt="Beach" src="http://swilliams.me/static/photos/maine/nature5.jpg"></a>
    <figcaption>Shortcut to Mushrooms</figcaption>
</figure>




<figure class="center">
    <a href="http://swilliams.me/static/photos/maine/nature6-full.jpg"><img alt="Beach" src="http://swilliams.me/static/photos/maine/nature6.jpg"></a>
    <figcaption>Hay</figcaption>
</figure>


<figure class="center">
    <a href="http://swilliams.me/static/photos/maine/nature7-full.jpg"><img alt="Beach" src="http://swilliams.me/static/photos/maine/nature7.jpg"></a>
    <figcaption>Waterfall</figcaption>
</figure>




<figure class="center">
    <a href="http://swilliams.me/static/photos/maine/nature8-full.jpg"><img alt="Beach" src="http://swilliams.me/static/photos/maine/nature8.jpg"></a>
    <figcaption>Forest moon of Endor</figcaption>
</figure>




<figure class="center">
    <a href="http://swilliams.me/static/photos/maine/nature9-full.jpg"><img alt="Beach" src="http://swilliams.me/static/photos/maine/nature9.jpg"></a>
</figure>


<h1>And the rest</h1>

<p>Maine also has Lighthouses. This one is called the Portland Head Light.</p>

<figure class="center">
    <a href="http://swilliams.me/static/photos/maine/lighthouse-full.jpg"><img alt="Beach" src="http://swilliams.me/static/photos/maine/lighthouse.jpg"></a>
</figure>


<p>There were fireworks on the beach one night.</p>

<figure class="center">
    <a href="http://swilliams.me/static/photos/maine/fireworks-full.jpg"><img alt="Beach" src="http://swilliams.me/static/photos/maine/fireworks.jpg"></a>
</figure>


<p>We visited a farm and picked berries. Then ate them.</p>

<figure class="center">
    <a href="http://swilliams.me/static/photos/maine/berries-full.jpg"><img alt="Beach" src="http://swilliams.me/static/photos/maine/berries.jpg"></a>
</figure>


<p>We rented kayaks and paddled up the Saco river.</p>

<figure class="center">
    <a href="http://swilliams.me/static/photos/maine/kayak1-full.jpg"><img alt="Beach" src="http://swilliams.me/static/photos/maine/kayak1.jpg"></a>
</figure>




<figure class="center">
    <a href="http://swilliams.me/static/photos/maine/kayak2-full.jpg"><img alt="Beach" src="http://swilliams.me/static/photos/maine/kayak2.jpg"></a>
</figure>


<h1>And Finally</h1>

<p>We had an early checkout time on Saturday, but our flight back wasn&rsquo;t until the evening. We took the scenic route through New Hampshire and stopped at Cathedral Ledge for a little hiking and sightseeing. It was a good stop.</p>

<figure class="center">
    <a href="http://swilliams.me/static/photos/maine/nh1-full.jpg"><img alt="Beach" src="http://swilliams.me/static/photos/maine/nh1.jpg"></a>
    <figcaption>Rock climber (definitely not me)</figcaption>
</figure>




<figure class="center">
    <a href="http://swilliams.me/static/photos/maine/NH-Pano-Color-full.jpg"><img alt="Beach" src="http://swilliams.me/static/photos/maine/NH-Pano-Color.jpg"></a>
    <figcaption>The view</figcaption>
</figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Apps I Use and if they'd Work as a Subscription]]></title>
    <link href="http://blog.swilliams.me/words/2016/06/08/apps-i-use-and-if-theyd-work-as-a-subscription/"/>
    <updated>2016-06-08T13:48:04-07:00</updated>
    <id>http://blog.swilliams.me/words/2016/06/08/apps-i-use-and-if-theyd-work-as-a-subscription</id>
    <content type="html"><![CDATA[<p>Apps on my home screen that I use most often and my opinion if they&rsquo;d be appropriate for the <a href="https://developer.apple.com/app-store/subscriptions/whats-new/">new subscription service Apple is rolling out</a>.</p>

<ul>
<li><a href="https://geo.itunes.apple.com/us/app/heartwatch.-view-get-notified/id1062745479?mt=8">Heartwatch</a> — probably not</li>
<li><a href="https://geo.itunes.apple.com/us/app/runkeeper-gps-running-walk/id300235330?mt=8">Runkeeper</a> — already has a <a href="https://runkeeper.com/go?utm_campaign=gogeneral&amp;utm_medium=web&amp;pchannel=web.mark.nav&amp;utm_source=homepage">separate subscription service</a></li>
<li><a href="https://geo.itunes.apple.com/us/app/human-activity-tracker-walking/id692721875?mt=8">Human</a> — already has a separate subscription service</li>
<li><a href="https://geo.itunes.apple.com/us/app/addapp-insights/id893111432?mt=8">Addapp Insights</a> — if they beefed their analysis up, maybe</li>
<li><a href="https://geo.itunes.apple.com/us/app/activity++/id1089666978?mt=8">Activity++</a> — no</li>
<li><a href="https://geo.itunes.apple.com/us/app/pedometer++/id712286167?mt=8">Pedometer++</a> — no</li>
<li><a href="https://geo.itunes.apple.com/us/app/fantastical-2-for-ipad-calendar/id830708155?mt=8">Fantastical</a> — no</li>
<li><a href="https://geo.itunes.apple.com/us/app/carrot-weather-talking-forecast/id961390574?mt=8">Carrot Weather</a> — no</li>
<li><a href="https://geo.itunes.apple.com/us/app/simplenote/id289429962?mt=8">Simplenote</a> — had a <a href="https://simplenote.com/premium/">separate subscription service</a>, but it&rsquo;s on hold for now. I bet this news will change that.</li>
<li><a href="https://geo.itunes.apple.com/us/app/unread-rss-news-reader/id911364254?mt=8">Unread</a> — piggyback&rsquo;s onto other subscription services, but doesn&rsquo;t have its own built-in</li>
<li><a href="https://geo.itunes.apple.com/us/app/1password-password-manager/id568903335?mt=8">1Password</a> — already has a <a href="https://1password.com/families/">family</a> or <a href="https://1password.com/teams/">organization</a> plan</li>
<li><a href="https://geo.itunes.apple.com/us/app/spark-love-your-email-again/id997102246?mt=8">Spark</a> — no</li>
<li><a href="https://geo.itunes.apple.com/us/app/calorie-counter-diet-tracker/id341232718?mt=8">MyFitnessPal</a> — already has a <a href="http://blog.myfitnesspal.com/introducing-myfitnesspal-upgrade/">separate subscription service</a></li>
<li><a href="https://geo.itunes.apple.com/us/app/paprika-recipe-manager-for/id406732590?mt=8">Paprika</a> — yes, though they already provide a sync service free of charge (via iCloud perhaps?)</li>
<li><a href="https://geo.itunes.apple.com/us/app/day-one-2-diary-+-journal/id1044867788?mt=8">Day One</a> — yes, though they already provide a sync service free of charge</li>
<li><a href="https://geo.itunes.apple.com/us/app/tweetbot-4-for-twitter/id1018355599?mt=8">Tweetbot</a> — not with the current feature set</li>
<li><a href="https://geo.itunes.apple.com/us/app/overcast-podcast-player/id888422857?mt=8">Overcast</a> — I&rsquo;m betting <a href="https://marco.org/">Marco</a> is already working on integrating the subscription system into Overcast.</li>
</ul>


<p>I wonder how many, if any, will consider switching an existing subscription service to one built into Apple&rsquo;s systems. I wonder how many, if any, companies will <a href="http://mjtsai.com/blog/2016/04/06/textexpander-6-and-textexpander-com/">rush</a> into subscription without really thinking it through and angering all their users. There are a whole lot of economic factors at play to consider before doing that.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[One Year of Getting Healthy]]></title>
    <link href="http://blog.swilliams.me/words/2016/06/07/one-year-of-getting-healthy/"/>
    <updated>2016-06-07T13:10:53-07:00</updated>
    <id>http://blog.swilliams.me/words/2016/06/07/one-year-of-getting-healthy</id>
    <content type="html"><![CDATA[<p>I received my Apple Watch just over a year ago. I bought it because it felt like it was going to be the next big platform, and I didn&rsquo;t want to miss out. That didn&rsquo;t turn out to be the case, but what did suck me in were its fitness tracking capabilities. I&rsquo;d been concerned about my overall health and weight since I hit my 30s; my family history that includes such fun things as diabetes and heart disease, and I wanted to avoid those. The watch finally served as the catalyst to really try to do something about it.</p>

<p>A year later, I&rsquo;ve lost 50 pounds. I can run 8 miles without stopping and will be running a half marathon in early 2017. This is how I did that and how I plan to lose a little more, and keep it off. Also note: this worked for me and may not be replicable. People are different and there are so many other factors with regards to health and weight. I don&rsquo;t write this to brag (ok, well maybe just a smidge), or to instruct, but to log.</p>

<p>This was not my first rodeo. A few years ago I was traveling back forth from Phoenix to Dallas for work. Since this was going to last for a few months, so I decided to take advantage of the &ldquo;free&rdquo; time and get serious about working out. I signed up for a gym membership, mapped out a plan with a trainer, and started to lift weights and do the various gym things you do. I also had a per diem for eating expenses from the company and ate far better than I normally would have if left to my own devices<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>. It worked pretty well. I went from about 235 down to 195. I had all the intention to keep it off, but then I didn&rsquo;t.</p>

<p>When that project was over I was back at home. I kept up the gym work, but it got harder to fit that in my schedule. In Dallas I didn&rsquo;t have anything else to do but work, go to the gym, and watch bad TV in my hotel room. At home I had a family and friends to, y&#8217;know, do things with. I was back to thinking about my own food again, and the laziness and lack of discipline crept back in. Working in an office with lots of free snacks and soda did not help either.</p>

<p>Eventually the gym attendence faded too. The process of putting on the gym clothes, finding my bag, driving to the gym, doing the locker room thing, then going to lift weights, all on a relatively strict schedule started to be too many hurdles for my lazy butt. I  would go to the gym but then put in a low effort on a treadmill for 20 minutes.  Then I just didn&rsquo;t even go anymore.</p>

<p>Time went on and I found myself fatter than I had been before, somewhere north of 240<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup>. It crept up on me and I didn&rsquo;t think I had gotten back to where I was before, and then some.</p>

<p>After some thought I realized that my failure with the Dallas plan wasn&rsquo;t sustainable at home. Everything I had done was based on the notion of being away from home and having the time and money to do all the right things. I needed to come up with a plan that would work with my irregular schedule. I also didn&rsquo;t want to go on a special diet, or any kind of diet really. I&rsquo;ve seen so many people lose weight from dieting and then gain it right back. <a href="http://newsroom.ucla.edu/releases/Dieting-Does-Not-Work-UCLA-Researchers-7832">The evidence supports that notion</a>. I knew that for something permanent to happen, it would have to last me the rest of my life. I came up with three rules to improve my health:</p>

<ol>
<li>Eat a little less</li>
<li>Eat a little better</li>
<li>Exercise a little more</li>
</ol>


<p>And let time and attrition do its thing. I knew this wasn&rsquo;t going to get me any book deals, but it felt like it would work with me.</p>

<h2>Eat a little less &amp; Eat a little better</h2>

<p>I like to eat. No, I <em>really</em> like to eat. I find it to be one of life&rsquo;s pleasures, and you get to do it three times a day!<sup id="fnref:1"><a href="#fn:3" rel="footnote">3</a></sup> I could never be a vegetarian, despite any health risks because I love to eat cows and pigs. <a href="http://thepaleodiet.com/what-to-eat-on-the-paleo-diet/">Paleo</a> won&rsquo;t work for me because I have a torrid love affair with sandwiches.</p>

<blockquote class="twitter-tweet" data-lang="en"><p lang="en" dir="ltr">Meat might cause a slightly elevated risk of cancer? Well that’s a factor to be weighed, but have you tasted brisket?</p>&mdash; Scott Williams (@swilliams) <a href="https://twitter.com/swilliams/status/658802940866465792">October 27, 2015</a></blockquote>


<script async src="http://blog.swilliams.me//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>Yeah, any diet that was courting me was gonna need a really good pre-nup before I&rsquo;d commit to it.</p>

<p>I also had developed quite a fondness for soda. That became my caffeine delivery system of choice. Some people would come into the office with their Starbucks cup, I had my thirstbuster. At some point I switched over to diet soda, which is gross, but had less calories. I never really dug into the science of it, but I don&rsquo;t know if that&rsquo;s an even tradeoff, especially at 48oz (or more, yikes) per day. I eventually decided to ween myself off soda and force myself to like coffee (and it&rsquo;s miniscule calorie content) instead. It took some doing, but I now appreciate the stuff. Being able to do the ceremony of <a href="http://www.amazon.com/Aeropress-Coffee-and-Espresso-Maker/dp/B0047BIWSK?sr=1-1&amp;qid=1465330919&amp;keywords=aeropress&amp;ref_=sr_1_1&amp;tag=thepetzoo-20&amp;ie=UTF8&amp;s=kitchen">Aeropressing</a> everything helped trick my brain into thinking it was doing something fancy too.</p>

<p>Despite curtailing soda significantly, I still usually had at least one 12oz can of Coke with lunch, nearly every day. I really wanted to kick it altogether, but the flesh is weak. Through sheer willpower I got it down to one (or two) per week. That maintained for a couple of months, and then I got the stomach flu and was waylaid for a few days. Due to a coincidence of timing, I managed to go a whole seven days without any soda, hitting that one week goal. After that, it was easier to skip. That&rsquo;s a rather &ldquo;unorthodox&rdquo; approach, but I guess it worked? I&rsquo;ll have a soda every now and then<sup id="fnref:4"><a href="#fn:4" rel="footnote">4</a></sup>, but it doesn&rsquo;t have the same allure as it used to.</p>

<p>Snacking has been harder to cut back on. Free food at the office seems to be able to circumvent most of the circuits in my brain and hit the MUST-HAVE centers directly. After a really long fight I&rsquo;ve cut back on trips to the candy dish full of delicious Hershey nuggets to a minimum.</p>

<p>And let&rsquo;s talk about diet in general. Like I said, I&rsquo;m never going to be be successful on one found in a magazine, but I could make changes to my diet in general. I&rsquo;m not going to ever cut carbs out completely, but I don&rsquo;t have bagels nearly as much as I used to. Now they&rsquo;re more of a special occasion than a common occurrence.</p>

<blockquote class="twitter-tweet" data-lang="en"><p lang="en" dir="ltr">I refuse to do business with anyone that doesn’t acknowledge the glory of the jalapeño bagel.</p>&mdash; Scott Williams (@swilliams) <a href="https://twitter.com/swilliams/status/723587932720783360">April 22, 2016</a></blockquote>


<script async src="http://blog.swilliams.me//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>Time permitting, I cook up some breakfast sausage and eggs in the morning. If I&rsquo;m feeling like I really want to be healthy (which is rare), I&rsquo;ll get some greek yogurt, granola, and fruit, but frankly I&rsquo;m not much of a fan of that.</p>

<p>I try to track the calories too. I use <a href="https://www.myfitnesspal.com/">MyFitnessPal</a>, but I I&rsquo;m not exactly in love with it. Their database is probably the best out there, but it&rsquo;s not complete; and as a software developer I empathize with the notion of tracking <em>every single food item in the world</em>, but it&rsquo;s still too annoying to try to find everything, especially if you cook a lot of your meals or don&rsquo;t eat at chain restaurants. I probably only track about 50% of the stuff I eat, and sometimes go for days without tracking anything (which I&rsquo;m betting maps up quite well with the times I eat worse).</p>

<p>My meals themselves aren&rsquo;t <strong>too</strong> bad. My wife and I both like to cook, so we have a home cooked meal most days, and don&rsquo;t go the Full Paula Deen. My achilles heel at home is snacks. I love chips, crackers, cookies, pretzels, anything crunchy really. If given the choice between some chocolate and cheez-its, I&rsquo;ll side with Team Kellogg. I can&rsquo;t mandate that those things are forbidden in our house either. My wife and kids have better self-discipline. Rather, I&rsquo;m trying to look at trends when I snack down too much. I usually snack in the evenings. The snacks are downstairs, and I&rsquo;ll usually spend the evenings upstairs. With these two data points, I try to avoid going downstairs in the evenings; laziness beats out food, usually.</p>

<p>I also regress more often than I care to admit. I&rsquo;ll have a few good days, and then eat too many chips or cookies. It&rsquo;s getting better, but fortunately the other prong in my plan helps offset some of that.</p>

<h2>Exercise a little more</h2>

<p>Filling in the rings on the Apple Watch is fun. Getting a chain is of completions is even better, and creates a virtuous cycle. I wanted to keep hitting my goal and increasing the streak of completions. I got my watch right before traveling to San Fransisco for <a href="https://developer.apple.com/wwdc/">WWDC</a>, a conference for Apple-centric software developers. It was a full week out there, and involved a lot of walking. I hit 2.5-3x my move goal every day out there. I was hooked on keeping that thing filled out.</p>

<p>Since the gym wasn&rsquo;t going to work for me, I tried to think about what I could do that would be sustainable for my lazy self. Walking was the obvious choice, but I also wanted to move just a little beyond that. I didn&rsquo;t want to take up running [yet]; I had tried doing that before and burnt out on it quicker than weight training. Also it was summer in Phoenix which meant if you were outside you ran the risk of facing the wrath of an angry God.</p>

<iframe width="420" height="315" src="https://www.youtube.com/embed/4PYt0SDnrBE" frameborder="0" allowfullscreen></iframe>


<p>Smaller steps were needed. I started to take a lap around the office atrium a few times a day. I&rsquo;d walk for 8 minutes to a nearby shop for lunch rather than drive for 2. I even ended up running in place at home (in the air conditioning). Yes, that&rsquo;s as dorky as it sounds, and I would stop if another human came within visual range because it&rsquo;s just so embarrassing. But it worked well enough, and I could do it just a few minutes here and there to fill out the rings.</p>

<p>Eventually, I figured that I should try to suck it up and run again. So, in late July (yes, when your shoes might stick to the pavement because they&rsquo;re melting) I &ldquo;ran&rdquo; a 5k. My time was 40:49 and involved a lot of walking, but I completed it, and drank a gallon of water afterward.</p>

<p>After that, and the heat, I didn&rsquo;t do another run until mid September, and then again until early October. I remember not wanting to run — I felt incredibly sore, sweaty, and would much rather continue doing the little stuff that I had been for the first few months. But by this time, I wanted to &ldquo;level-up&rdquo; a bit. The competitive side of me started to kick in and I wanted to see if I could be a &ldquo;runner&rdquo;.</p>

<p>My first goal was to complete a 5k without taking a walking break, which I had never done before. As I got a little better, my time dropped down to the mid 30&rsquo;s. Then I managed to run it with taking a single walking break for just one minute. Finally in mid November I ran 3.11 miles straight without any breaks. Shortly after that I cracked another goal and ran it in under 30 minutes<sup id="fnref:5"><a href="#fn:5" rel="footnote">5</a></sup>. I wasn&rsquo;t expecting to do that quite so quickly.</p>

<p>This wasn&rsquo;t without any hitches though. I had some nasty shin splints at the start. I would be incredibly sore from a run and hit the Advil right after the shower. And the chafing, oh the chafing <em>[picture removed, gross, come on. &mdash;ed]</em>. Taking it a little easier helped the shin splints to go away, and eventually the soreness stopped being an issue.</p>

<p>Something weird happened. I started to enjoy running. The sense of satisfaction from completing a run grew. I started to go a little longer, occasionally a little faster. I got to the end of my first 5 mile run and thought, &ldquo;hey, I bet I could go a little further&rdquo;. I forced myself to not overdo it and not add too much distance too quickly.</p>

<p>I also started to consider races. I am under no illusion that I would be competitive in any kind of race<sup id="fnref:6"><a href="#fn:6" rel="footnote">6</a></sup>, but actually putting something on an official record sounded interesting. I could run a 10k well enough, and thought about one of the longer races for a stretch goal. A full marathon was probably out of the question due to time constraints, but the half was alluring. You train for something like that by doing <a href="http://www.halfmarathons.net/half-marathon-training-schedule-for-beginning-runners/">moderately short runs during the week and a longer one on weekends.</a> You don&rsquo;t even have to run the 13.1 miles during training. I figured why not? and signed up for the <a href="http://www.runrocknroll.com/arizona/">Rock-n-Roll</a> half marathon in January 2017.</p>

<blockquote class="twitter-tweet" data-lang="en"><p lang="en" dir="ltr">Well that happened. <a href="https://t.co/fKqyxKl6cx">pic.twitter.com/fKqyxKl6cx</a></p>&mdash; Scott Williams (@swilliams) <a href="https://twitter.com/swilliams/status/730413542755590145">May 11, 2016</a></blockquote>


<script async src="http://blog.swilliams.me//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>This process took a whole year. And it was a gradual, incredibly gradual, increase in effort. If 2015 me had flipped a switch and started running right away as often as I do now, he would have given up pretty quickly.</p>

<p>The other big question: is this sustainable? It&rsquo;s been a year, and if anything, my dedication to getting healthier is stronger than it was before. I weigh 194 pounds now, and want to get to 175. The road has been uneven, but the trajectory is going in the right direction.</p>

<h2>Misc</h2>

<ul>
<li>Calorie counting is such a pain in the butt, and I don&rsquo;t necessarily believe what any of my trackers tell me&hellip; After putting my age/weight/goal into MyFitnessPal it told me that if I ate 2600 calories per day I&rsquo;d lose a pound a week. That&rsquo;s a flat out lie. If I want to lose weight, I need to keep it under 2000 and keep up my exercise routine.</li>
<li>Relatedly, that thing where <a href="http://www.nytimes.com/2016/05/02/health/biggest-loser-weight-loss.html?_r=0">if you lose a bunch of weight and then your body fights against you to gain it back</a>? I think I&rsquo;m seeing that to a small extent. My hope is that since I don&rsquo;t plan to stop my routine, it won&rsquo;t come flooding back, and that it&rsquo;ll settle down after a while.</li>
<li>I still drink alcohol too. I don&rsquo;t drink much beer anymore, preferring wine and whiskey.</li>
<li>My fastest 5k is 26:56, and I almost always keep them under 30 minutes. I don&rsquo;t think I&rsquo;ll be breaking that again until it cools off&hellip; in November.</li>
<li>I used to run at night, but switched to mornings. My body would be tired after a run, but my brain would be rocking out like Andrew WK, causing me sleep difficulty.</li>
<li>My calorie burn rate has dropped significantly. I think this is a good thing. The jog in place thing used to get up to 12 per minute, but that&rsquo;s down to 9 now. Yes, I still do it if I&rsquo;m close to my daily goal and don&rsquo;t want to go back outside. Stop judging me.</li>
<li>If you&rsquo;re on RunKeeper, look me up!</li>
</ul>


<div class="footnotes">
  <ol>
  <li class="footnote" id="fn:1">
  <p>Seriously, I&#8217;m not too proud to eat from a gas station if necessary. I find Olive Garden and Chili&#8217;s to be gross though.</p>
</li>
<li class="footnote" id="fn:2">
  <p>I don&#8217;t have the exact number because I was too embarrassed to weigh myself before starting on my latest track. I regret this decision because now I don&#8217;t know exactly how much weight I lost. My first measurement was at 239 after about a month and a half, so with a little guess work I figure it was around 245.</p>
</li>
    <li class="footnote" id="fn:3">
  <p>This is why I don&#8217;t really understand <a href="https://www.soylent.com/">Soylent</a> and the things like it. I don&#8217;t eat to get full, I eat because food is great. This is probably also why I&#8217;m fat.</p>
</li>
<li class="footnote" id="fn:4">
  <p>I think I&#8217;ve had under 5 for all of 2016 so far.</p>
</li>
<li class="footnote" id="fn:5">
  <p>29:56 on November 23.</p>
</li>
<li class="footnote" id="fn:6">
  <p>Hearing a teenaged runner talk about getting his 5k under 20 minutes was an eye-opener. I am optimistic about improving my speed, but I don&#8217;t think I&#8217;ll ever get that fast.</p>
</li>
  </ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Introducing Gliphy]]></title>
    <link href="http://blog.swilliams.me/words/2016/05/15/introducing-gliphy/"/>
    <updated>2016-05-15T13:47:59-07:00</updated>
    <id>http://blog.swilliams.me/words/2016/05/15/introducing-gliphy</id>
    <content type="html"><![CDATA[<p>I&rsquo;m very happy to introduce a new open source library that I&rsquo;ve been building. It&rsquo;s called <a href="https://github.com/tallwave/gliphy">Gliphy</a> and it makes implementing <a href="https://developer.apple.com/library/ios/documentation/StringsTextFonts/Conceptual/TextAndWebiPhoneOS/CustomTextProcessing/CustomTextProcessing.html#//apple_ref/doc/uid/TP40009542-CH4-SW65">Dynamic Type</a> on iOS with Swift a breeze.</p>

<p>Accessibility is one of those things that everyone knows they should be better at implementing, but falls to the wayside when deadlines are looming. I liked the idea of supporting Dynamic Type in the apps I write, but it was kind of a slog to implement it. There are two main ways to do it right out of the gate with what is built in to iOS, code and Interface Builder.</p>

<p>Let&rsquo;s go with code first. The easiest way to get the preferred font for a given text style.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="n">titleLabel</span><span class="p">.</span><span class="n">font</span> <span class="o">=</span> <span class="bp">UIFont</span><span class="p">.</span><span class="n">preferredFontForTextStyle</span><span class="p">(</span><span class="n">UIFontTextStyleHeadline</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>iOS will set whatever the &ldquo;Headline&rdquo; style is to your <code>titleLabel</code>&rsquo;s font. If a user changes their default font size in Settings, it&rsquo;ll scale with that.</p>

<p>Interface Builder makes it fairly simple too:</p>

<figure>
    <img alt="Interface Builder" src="https://raw.githubusercontent.com/Tallwave/Gliphy/gh-pages/images/ib.png">
    <figcaption>Choose a style from the font menu in Interface Builder</figcaption>
</figure>


<p>But there&rsquo;s a catch. If a user launches your app, then changes the font size, your app won&rsquo;t display any new changes until it has quit and is relaunched. You can watch for the <code>UIContentSizeCategoryDidChangeNotification</code> notification though and then re-render your text based views then<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>. So, regardless of your choice you&rsquo;ll have to code out <em>a lot</em> of labels, buttons, and text fields. In a normal app, that&rsquo;s hundreds of lines of boring code.</p>

<p>The other big downside is that you&rsquo;re limited to the system font. So, San Francisco on iOS 9 and Helvetica Neue on older versions. I like those fonts just fine, but sometimes you need to switch it up.</p>

<h2>BNRDynamicTextManager</h2>

<p>I first came across <a href="https://www.bignerdranch.com/">Big Nerd Ranch&rsquo;s</a> <a href="https://github.com/bignerdranch/BNRDynamicTypeManager">BNRDynamicTextManager</a> library and found it to be pretty useful. You still have to wire up each field (or use subclasses), and you&rsquo;re still stuck with the system font, but it handled all the notification watching for you. Here&rsquo;s a sample:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">[[</span><span class="n">BNRDynamicTypeManager</span> <span class="n">sharedInstance</span><span class="p">]</span> <span class="nl">watchLabel</span><span class="p">:</span><span class="n">label</span>
</span><span class='line'>                                         <span class="nl">textStyle</span><span class="p">:</span><span class="n">UIFontTextStyleBody</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<p>The library was lightweight and easy to understand<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup>, which got me thinking.</p>

<h2>Gliphy</h2>

<p>I decided to port BNRDynamicTextManager to Swift and see if I could add some functionality to it. Porting it wasn&rsquo;t a big deal, although I made a couple of changes to better match Swift&rsquo;s idioms. I then added a couple of nice features on top.</p>

<p><strong>Big Feature 1 — Custom Fonts</strong><br />
Watcher methods can take the name of a custom font:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="n">DynamicTypeManager</span><span class="p">.</span><span class="n">sharedInstance</span><span class="p">.</span><span class="n">watchLabel</span><span class="p">(</span><span class="n">titleLabel</span><span class="p">,</span>
</span><span class='line'>                                             <span class="nl">textStyle</span><span class="p">:</span> <span class="n">UIFontTextStyleTitle1</span><span class="p">,</span>
</span><span class='line'>                                             <span class="nl">fontName</span><span class="p">:</span> <span class="s">&quot;MarkerFelt-Thin&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>This will apply the font size of the &ldquo;Headline&rdquo; style to your label, but keep the glorious MarkerFelt font. If the <code>fontName</code> is not associated with an installed font, it will fall back to the system font.</p>

<p><strong>Big Feature 2 — Custom Styles</strong><br />
iOS 7 brought us six text styles, and iOS 9 brought four more<sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup>. They cover a decent range of use cases, but sometimes you still want your own. You can do that with the <code>DynamicFontRegistry</code> class:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="c1">// This could be in AppDelegate, some custom Theme class, or wherever</span>
</span><span class='line'><span class="n">DynamicFontRegistry</span><span class="p">.</span><span class="n">registry</span><span class="p">.</span><span class="n">addTextStyle</span><span class="p">(</span><span class="s">&quot;UIFontTextStyleReallyReallyBigTitle&quot;</span><span class="p">,</span>
</span><span class='line'>                                          <span class="nl">scaledFrom</span><span class="p">:</span> <span class="n">UIFontTextStyleHeadline</span><span class="p">,</span>
</span><span class='line'>                                          <span class="nl">byFactor</span><span class="p">:</span> <span class="mi">4</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>In order to keep with the feel of how Dynamic Type works, you pick a style to serve as a base reference for the new one and then scale it from there. That way you don&rsquo;t hardcode a point size. You can then watch it the same way you would before:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="n">DynamicTypeManager</span><span class="p">.</span><span class="n">sharedInstance</span><span class="p">.</span><span class="n">watchLabel</span><span class="p">(</span><span class="n">titleLabel</span><span class="p">,</span>
</span><span class='line'>                                             <span class="nl">textStyle</span><span class="p">:</span> <span class="s">&quot;UIFontTextStyleReallyReallyBigTitle&quot;&quot;, </span>
</span><span class='line'>                                             <span class="nl">fontName</span><span class="p">:</span> <span class="s">&quot;MarkerFelt-Thin&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Big Feature 3 — Global Styles</strong><br />
I liked how it was working now, but it was still a long process to cover all the text based views that could be in an app. I wanted a solution that would make it super easy to handle the 90% scenario. Enter the <code>StyleWatcher</code> and <code>StyleConfig</code> constructs. The <code>StyleWatcher</code> will recursively examine each subview in a parent view and watch them with the <code>DynamicTypeManager</code> if they have a text style associated with them. That way you can set up the text-styles solely UI within Interface Builder and remove an entire swath of code. Additionally, you can set a global style that the watcher will use to find your custom font (or style).</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="c1">// AppDelegate</span>
</span><span class='line'><span class="c1">// Setting up the global styles</span>
</span><span class='line'><span class="n">StyleWatcher</span><span class="p">.</span><span class="n">defaultConfig</span><span class="p">.</span><span class="n">label</span><span class="p">[</span><span class="n">UIFontTextStyleTitle1</span><span class="p">]</span> <span class="o">=</span> <span class="s">&quot;MarkerFelt-Thin&quot;</span>
</span><span class='line'><span class="n">StyleWatcher</span><span class="p">.</span><span class="n">defaultConfig</span><span class="p">.</span><span class="n">label</span><span class="p">[</span><span class="n">UIFontTextStyleTitle1</span><span class="p">]</span> <span class="o">=</span> <span class="s">&quot;MarkerFelt-Thin&quot;</span>
</span><span class='line'><span class="n">StyleWatcher</span><span class="p">.</span><span class="n">defaultConfig</span><span class="p">.</span><span class="n">textField</span><span class="p">[</span><span class="n">UIFontTextStyleBody</span><span class="p">]</span> <span class="o">=</span> <span class="s">&quot;Avenir-Light&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Once that has been set up, tell the watcher to watch a view:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="c1">// In some View Controller</span>
</span><span class='line'><span class="k">let</span> <span class="n">watcher</span> <span class="o">=</span> <span class="n">StyleWatcher</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="kr">override</span> <span class="k">func</span> <span class="n">viewDidLoad</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nb">super</span><span class="p">.</span><span class="n">viewDidLoad</span><span class="p">()</span>
</span><span class='line'>    <span class="n">watcher</span><span class="p">.</span><span class="n">watchViews</span><span class="p">(</span><span class="nl">inView</span><span class="p">:</span> <span class="n">view</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>And the magic will happen.</p>

<p>You can customize that process too. The <code>watchViews</code> method can take its own <code>StyleConfig</code> as well, allowing you to define multiple different styles and applying them where necessary.</p>

<p>I&rsquo;m pretty happy with the way Gliphy turned out. The <a href="https://github.com/tallwave/gliphy">code</a> is pretty straightforward too; no mind bending swiftisms required. There are some downsides though. Attributed strings aren&rsquo;t handled at all, and due to their nature, they probably will never be. Gliphy only watches four kinds of views: labels, buttons, textfields, and textviews, (plus their subclasses) and is a little difficult to extend beyond that.</p>

<p>All said though, it should make supporting Dynamic Type something more than an afterthought in your apps.</p>

<div class="footnotes">
  <ol>
    <li class="footnote" id="fn:1">
  <p>There is a bug in the iOS simulator and Xcode 7.3. You can change the font size, but the notification will not fire. It still works on a device though.</p>
</li>
<li class="footnote" id="fn:2">
  <p>I raise my glass to <a href="https://github.com/jgallagher">jgallagher</a> for that.</p>
</li>
<li class="footnote" id="fn:3">
  <p>Here they are:
  <ul>
    <li>UIFontTextStyleHeadline</li>
    <li>UIFontTextStyleSubheadline</li>
    <li>UIFontTextStyleBody</li>
    <li>UIFontTextStyleFootnote</li>
    <li>UIFontTextStyleCaption1</li>
    <li>UIFontTextStyleCaption2</li>
    <li>UIFontTextStyleTitle1</li>
    <li>UIFontTextStyleTitle2</li>
    <li>UIFontTextStyleTitle3</li>
    <li>UIFontTextStyleCallout</li>        
  </ul>
  </p>
</li>
  </ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Combining if let and where in Swift]]></title>
    <link href="http://blog.swilliams.me/words/2016/05/05/combining-if-let-and-where-in-swift/"/>
    <updated>2016-05-05T10:55:32-07:00</updated>
    <id>http://blog.swilliams.me/words/2016/05/05/combining-if-let-and-where-in-swift</id>
    <content type="html"><![CDATA[<p>What I like about Swift is that it feels like a natural progression when learning more of the language&rsquo;s features. Case in point: I&rsquo;ve known about the <code>where</code> keyword for a while, and have used it plenty of times before, but just found this little ditty:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">if</span> <span class="k">let</span> <span class="n">someBool</span> <span class="o">=</span> <span class="n">someThing</span><span class="o">?</span><span class="p">.</span><span class="n">someBool</span> <span class="k">where</span> <span class="n">someBool</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// do stuff if someBool is true</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>That will only execute the body of the statement if <code>someThing</code> is not nil and <code>someBool</code> is true. Before, I had thought that would&rsquo;ve been two separate statements, and extra indenting. Kinda cool.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Private Extensions in Swift]]></title>
    <link href="http://blog.swilliams.me/words/2015/12/11/private-extensions-in-swift/"/>
    <updated>2015-12-11T11:08:59-07:00</updated>
    <id>http://blog.swilliams.me/words/2015/12/11/private-extensions-in-swift</id>
    <content type="html"><![CDATA[<p>Here&rsquo;s a quickie. In Swift, the default <a href="https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/AccessControl.html">accessor</a> for strcutures is <code>internal</code>, meaning that it is available to everything else within the module. You can change this by adding <code>private</code> or <code>public</code> in front of them like so:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="n">private</span> <span class="k">class</span> <span class="n">Foo</span> <span class="p">{</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>private</code> means that the construct is only available within the same file. I just &ldquo;discovered&rdquo;<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup> that you can also mark an <a href="https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/Extensions.html">Extension</a> as <code>private</code>, which I hadn&rsquo;t considered before. This let&rsquo;s you add functionality to a struct or class that may be useful in the current context of everything within that same file, but doesn&rsquo;t make sense elsewhere.</p>

<p>For example, in a <a href="https://developer.apple.com/healthkit/">HealthKit</a> project you may be only dealing with fluid ounces for an <code>HKQuantitySample</code> and converting all the time is a bit of a pain. You don&rsquo;t necessarily want to make a <code>quantityInOunces</code> computed variable  available on the whole app, but in a specific file where you&rsquo;re computed all those ounces, it makes sense.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="n">private</span> <span class="k">extension</span> <span class="n">HKQuantitySample</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">var</span> <span class="nl">quantityInOunces</span><span class="p">:</span> <span class="n">Double</span><span class="o">?</span> <span class="p">{</span> <span class="cm">/* blah */</span> <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="n">HealthKitManager</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">func</span> <span class="n">doStuff</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="c1">// Calculate a bunch of ounces easy peasy.</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<div class="footnotes">
  <ol>
    <li class="footnote" id="fn:1">
  <p>Couldn&#8217;t think of a better word, but yeah I&#8217;m regular Vasco de Gama.</p>
</li>
  </ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Good, the Bad, and the Ugly with the Apple TV]]></title>
    <link href="http://blog.swilliams.me/words/2015/11/05/the-good-the-bad-and-the-ugly-with-the-apple-tv/"/>
    <updated>2015-11-05T08:28:09-07:00</updated>
    <id>http://blog.swilliams.me/words/2015/11/05/the-good-the-bad-and-the-ugly-with-the-apple-tv</id>
    <content type="html"><![CDATA[<p>A new Apple device! I&rsquo;m required to have opinions. Here they are in a contrived fashion!</p>

<h1>The Good</h1>

<p>Great UI and aesthetics.</p>

<p>It&rsquo;s faster.</p>

<p>Scrubbing through video is significantly improved. I almost don&rsquo;t believe how much better it is.</p>

<p>Siri works as advertised. Accuracy, speed, and results are all great.</p>

<p>All the potential!</p>

<h1>The Bad</h1>

<p>Siri doesn&rsquo;t index content stored in iTunes libraries on the network. So to get to all the DVDs and Blu-rays I&rsquo;ve ripped I have to use the same UI as the old Apple TV.<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup></p>

<p>Siri doesn&rsquo;t work with Music. Not for music libraries on the network, iTunes Match, or Apple Music. I really don&rsquo;t understand this one, I&rsquo;m hoping it comes soon.</p>

<p>Only one remote can be paired with it. This makes gaming tricky. Hoping this changes soon too.</p>

<h1>The Ugly</h1>

<p>Passwords. This has already been discussed at length everywhere. One thought I had would be that it&rsquo;d be cool to enter passwords via Siri. Y&#8217;know, like that one scene in TNG:</p>

<iframe width="420" height="315" src="https://www.youtube.com/embed/oNrWgjh9tnU" frameborder="0" allowfullscreen></iframe>


<p>(A Touch ID powered remote would probably be better)</p>

<p>App discoverability. It&rsquo;s really bad, and I don&rsquo;t know how they&rsquo;re going to fix it. Top Charts was just added, which is better than nothing, but if someone wants to market their app anywhere online they have no way to provide a link to it! &ldquo;Go to the app store, search for s-o-m-e-t-h-i&hellip;&rdquo; is all kinds of awful.</p>

<p>Overall I like it. I have almost no reason to use the Roku now<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup>.</p>

<div class="footnotes">
  <ol>
    <li class="footnote" id="fn:1">
  <p>I do not have Plex, so I don&#8217;t know if that circumvents it. If it does, I may grab it asap.</p>
</li>
<li class="footnote" id="fn:2">
  <p>Other than the rare times there&#8217;s something on Amazon Video that isn&#8217;t anywhere else.</p>
</li>
  </ol>
</div>

]]></content>
  </entry>
  
</feed>
